Started [cpu] profiling
--- Execution profile ---
Total samples:         2143
Non-Java:              19 (0.89%)
Unknown (Java):        3 (0.14%)

Frame buffer usage:    0.2862%

--- 13450000000 ns (62.76%), 1345 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.writev0
  [ 1] sun.nio.ch.SocketDispatcher.writev
  [ 2] sun.nio.ch.IOUtil.write
  [ 3] sun.nio.ch.SocketChannelImpl.write
  [ 4] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 5] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 6] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 8] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [11] io.netty.channel.AbstractChannelHandlerContext.flush
  [12] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [13] reactor.netty.channel.ChannelOperationsHandler.drain
  [14] reactor.netty.channel.ChannelOperationsHandler.flush
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [17] io.netty.channel.AbstractChannelHandlerContext.flush
  [18] io.netty.channel.DefaultChannelPipeline.flush
  [19] io.netty.channel.AbstractChannel.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [22] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [23] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [24] io.netty.channel.nio.NioEventLoop.run
  [25] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [26] java.lang.Thread.run

--- 6380000000 ns (29.77%), 638 samples
  [ 0] sun.nio.ch.KQueueArrayWrapper.kevent0
  [ 1] sun.nio.ch.KQueueArrayWrapper.poll
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] io.netty.channel.nio.SelectedSelectionKeySetSelector.select
  [ 6] io.netty.channel.nio.NioEventLoop.select
  [ 7] io.netty.channel.nio.NioEventLoop.run
  [ 8] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [ 9] java.lang.Thread.run

--- 500000000 ns (2.33%), 50 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.SocketDispatcher.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.SocketChannelImpl.read
  [ 5] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 6] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 7] io.netty.channel.socket.nio.NioSocketChannel.doReadBytes
  [ 8] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [ 9] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [10] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [11] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [12] io.netty.channel.nio.NioEventLoop.run
  [13] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [14] java.lang.Thread.run

--- 40000000 ns (0.19%), 4 samples
  [ 0] io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields.lvProducerLimit
  [ 1] io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue.offer
  [ 2] io.netty.util.concurrent.SingleThreadEventExecutor.offerTask
  [ 3] io.netty.util.concurrent.SingleThreadEventExecutor.addTask
  [ 4] io.netty.util.concurrent.SingleThreadEventExecutor.execute
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 9] reactor.core.publisher.StrictSubscriber.onNext
  [10] io.rsocket.internal.UnboundedProcessor.drainFused
  [11] io.rsocket.internal.UnboundedProcessor.drain
  [12] io.rsocket.internal.UnboundedProcessor.onNext
  [13] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [14] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [15] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [16] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [17] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [18] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] reactor.core.publisher.Operators$ScalarSubscription.request
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [22] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [23] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.MonoJust.subscribe
  [28] reactor.core.publisher.MonoPeekFuseable.subscribe
  [29] reactor.core.publisher.MonoMapFuseable.subscribe
  [30] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [31] reactor.core.publisher.MonoDoFinally.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.Mono.subscribeWith
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] io.rsocket.RSocketServer.handleRequestResponse
  [38] io.rsocket.RSocketServer.handleFrame
  [39] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [40] reactor.core.publisher.LambdaSubscriber.onNext
  [41] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [45] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [46] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [47] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [48] reactor.netty.channel.FluxReceive.drainReceiver
  [49] reactor.netty.channel.FluxReceive.onInboundNext
  [50] reactor.netty.channel.ChannelOperations.onInboundNext
  [51] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [57] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [58] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [62] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [65] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [66] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [69] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [70] io.netty.channel.nio.NioEventLoop.run
  [71] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [72] java.lang.Thread.run

--- 40000000 ns (0.19%), 4 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 3] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 4] io.netty.util.ReferenceCountUtil.release
  [ 5] io.netty.util.ReferenceCountUtil.safeRelease
  [ 6] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 7] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] io.netty.channel.AbstractChannelHandlerContext.write
  [14] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [15] reactor.netty.channel.ChannelOperationsHandler.drain
  [16] reactor.netty.channel.ChannelOperationsHandler.flush
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [19] io.netty.channel.AbstractChannelHandlerContext.flush
  [20] io.netty.channel.DefaultChannelPipeline.flush
  [21] io.netty.channel.AbstractChannel.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [24] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [25] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [26] io.netty.channel.nio.NioEventLoop.run
  [27] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [28] java.lang.Thread.run

--- 30000000 ns (0.14%), 3 samples
  [ 0] sun.nio.ch.NativeThread.current
  [ 1] sun.nio.ch.SocketChannelImpl.read
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 3] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 4] io.netty.channel.socket.nio.NioSocketChannel.doReadBytes
  [ 5] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [ 6] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [ 7] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [ 8] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [ 9] io.netty.channel.nio.NioEventLoop.run
  [10] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [11] java.lang.Thread.run

--- 30000000 ns (0.14%), 3 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] io.netty.buffer.UnsafeByteBufUtil.getBytes
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.getBytes
  [ 3] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 4] io.netty.buffer.CompositeByteBuf.getBytes
  [ 5] io.netty.buffer.CompositeByteBuf.getBytes
  [ 6] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [ 7] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 8] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 9] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [10] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [11] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [12] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [15] io.netty.channel.AbstractChannelHandlerContext.write
  [16] io.netty.channel.AbstractChannelHandlerContext.write
  [17] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [18] reactor.netty.channel.ChannelOperationsHandler.drain
  [19] reactor.netty.channel.ChannelOperationsHandler.flush
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [22] io.netty.channel.AbstractChannelHandlerContext.flush
  [23] io.netty.channel.DefaultChannelPipeline.flush
  [24] io.netty.channel.AbstractChannel.flush
  [25] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [26] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [27] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [28] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [29] io.netty.channel.nio.NioEventLoop.run
  [30] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.buffer.PoolArena.normalizeCapacity
  [ 1] io.netty.buffer.PoolArena.allocate
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 7] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] io.netty.channel.AbstractChannelHandlerContext.write
  [14] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [15] reactor.netty.channel.ChannelOperationsHandler.drain
  [16] reactor.netty.channel.ChannelOperationsHandler.flush
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [19] io.netty.channel.AbstractChannelHandlerContext.flush
  [20] io.netty.channel.DefaultChannelPipeline.flush
  [21] io.netty.channel.AbstractChannel.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [24] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [25] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [26] io.netty.channel.nio.NioEventLoop.run
  [27] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [28] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 7] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 8] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 9] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [10] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [11] io.netty.buffer.PoolThreadCache.allocate
  [12] io.netty.buffer.PoolThreadCache.allocateTiny
  [13] io.netty.buffer.PoolArena.allocate
  [14] io.netty.buffer.PoolArena.allocate
  [15] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [16] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [17] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [18] io.netty.buffer.AbstractByteBufAllocator.buffer
  [19] io.rsocket.frame.FrameHeaderFlyweight.encode
  [20] io.rsocket.frame.RequestFlyweight.encode
  [21] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [22] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [23] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [29] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoMapFuseable.subscribe
  [36] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [37] reactor.core.publisher.MonoDoFinally.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribeWith
  [40] reactor.core.publisher.Mono.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] io.rsocket.RSocketServer.handleRequestResponse
  [44] io.rsocket.RSocketServer.handleFrame
  [45] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [46] reactor.core.publisher.LambdaSubscriber.onNext
  [47] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [48] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [51] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [52] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [53] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [54] reactor.netty.channel.FluxReceive.drainReceiver
  [55] reactor.netty.channel.FluxReceive.onInboundNext
  [56] reactor.netty.channel.ChannelOperations.onInboundNext
  [57] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [61] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [62] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [63] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [64] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [67] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [68] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [69] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [70] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [71] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [72] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [73] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [74] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [75] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [76] io.netty.channel.nio.NioEventLoop.run
  [77] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [78] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] reactor.core.publisher.Mono.subscribe
  [ 1] reactor.core.publisher.Mono.subscribeWith
  [ 2] reactor.core.publisher.Mono.subscribe
  [ 3] reactor.core.publisher.Mono.subscribe
  [ 4] reactor.core.publisher.Mono.subscribe
  [ 5] io.rsocket.RSocketServer.handleRequestResponse
  [ 6] io.rsocket.RSocketServer.handleFrame
  [ 7] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [15] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [16] reactor.netty.channel.FluxReceive.drainReceiver
  [17] reactor.netty.channel.FluxReceive.onInboundNext
  [18] reactor.netty.channel.ChannelOperations.onInboundNext
  [19] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [25] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [26] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [30] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [34] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [37] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [38] io.netty.channel.nio.NioEventLoop.run
  [39] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [40] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.util.concurrent.DefaultPromise.addListener
  [ 1] io.netty.channel.DefaultChannelPromise.addListener
  [ 2] io.rsocket.transport.netty.SendPublisher.writeCleanupPromise
  [ 3] io.rsocket.transport.netty.SendPublisher.access$2000
  [ 4] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 8] reactor.core.publisher.StrictSubscriber.onNext
  [ 9] io.rsocket.internal.UnboundedProcessor.drainFused
  [10] io.rsocket.internal.UnboundedProcessor.drain
  [11] io.rsocket.internal.UnboundedProcessor.onNext
  [12] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [13] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [14] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [15] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [16] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [23] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoMapFuseable.subscribe
  [29] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [30] reactor.core.publisher.MonoDoFinally.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribeWith
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] io.rsocket.RSocketServer.handleRequestResponse
  [37] io.rsocket.RSocketServer.handleFrame
  [38] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [39] reactor.core.publisher.LambdaSubscriber.onNext
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [44] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [45] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [46] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [47] reactor.netty.channel.FluxReceive.drainReceiver
  [48] reactor.netty.channel.FluxReceive.onInboundNext
  [49] reactor.netty.channel.ChannelOperations.onInboundNext
  [50] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [57] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [61] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [64] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [65] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [66] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [69] io.netty.channel.nio.NioEventLoop.run
  [70] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [71] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractByteBuf.slice
  [ 3] io.netty.buffer.AbstractByteBuf.slice
  [ 4] io.rsocket.util.ByteBufPayload.sliceData
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 6] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [ 7] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [ 8] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [10] reactor.core.publisher.Operators$ScalarSubscription.request
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoMapFuseable.subscribe
  [20] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [21] reactor.core.publisher.MonoDoFinally.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribeWith
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] io.rsocket.RSocketServer.handleRequestResponse
  [28] io.rsocket.RSocketServer.handleFrame
  [29] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.netty.channel.FluxReceive.drainReceiver
  [39] reactor.netty.channel.FluxReceive.onInboundNext
  [40] reactor.netty.channel.ChannelOperations.onInboundNext
  [41] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [48] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [52] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [56] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [60] io.netty.channel.nio.NioEventLoop.run
  [61] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [62] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.slice
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 6] io.rsocket.frame.RequestFlyweight.data
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 8] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.RSocketServer.handleFrame
  [11] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [12] reactor.core.publisher.LambdaSubscriber.onNext
  [13] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [17] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [18] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [19] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [20] reactor.netty.channel.FluxReceive.drainReceiver
  [21] reactor.netty.channel.FluxReceive.onInboundNext
  [22] reactor.netty.channel.ChannelOperations.onInboundNext
  [23] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [28] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [30] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [34] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [37] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [38] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [39] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [40] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [42] io.netty.channel.nio.NioEventLoop.run
  [43] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [44] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 1] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 2] io.netty.buffer.CompositeByteBuf.addComponents
  [ 3] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 4] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 5] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$52.175207292.apply
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [10] reactor.core.publisher.StrictSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainFused
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [15] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [48] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [49] reactor.netty.channel.FluxReceive.drainReceiver
  [50] reactor.netty.channel.FluxReceive.onInboundNext
  [51] reactor.netty.channel.ChannelOperations.onInboundNext
  [52] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [57] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [58] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [59] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [63] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [67] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [69] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [70] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [71] io.netty.channel.nio.NioEventLoop.run
  [72] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [73] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.buffer.AbstractByteBuf.<init>
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.<init>
  [ 2] io.netty.buffer.CompositeByteBuf.<init>
  [ 3] io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.compositeBuffer
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encodeOnlyData
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 8] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [ 9] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] reactor.core.publisher.Operators$ScalarSubscription.request
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [16] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [19] reactor.core.publisher.MonoJust.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoMapFuseable.subscribe
  [22] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [23] reactor.core.publisher.MonoDoFinally.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribeWith
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] io.rsocket.RSocketServer.handleRequestResponse
  [30] io.rsocket.RSocketServer.handleFrame
  [31] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [32] reactor.core.publisher.LambdaSubscriber.onNext
  [33] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [37] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [40] reactor.netty.channel.FluxReceive.drainReceiver
  [41] reactor.netty.channel.FluxReceive.onInboundNext
  [42] reactor.netty.channel.ChannelOperations.onInboundNext
  [43] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [49] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [50] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [58] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [61] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [62] io.netty.channel.nio.NioEventLoop.run
  [63] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [64] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 1] reactor.netty.channel.ChannelOperationsHandler.drain
  [ 2] reactor.netty.channel.ChannelOperationsHandler.flush
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 5] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 6] io.netty.channel.DefaultChannelPipeline.flush
  [ 7] io.netty.channel.AbstractChannel.flush
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [10] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [11] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [12] io.netty.channel.nio.NioEventLoop.run
  [13] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [14] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] reactor.netty.channel.ChannelOperationsHandler.flush
  [ 1] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 2] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 3] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 4] io.netty.channel.DefaultChannelPipeline.flush
  [ 5] io.netty.channel.AbstractChannel.flush
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [ 8] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [ 9] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [10] io.netty.channel.nio.NioEventLoop.run
  [11] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [12] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] io.netty.util.collection.IntObjectHashMap.put
  [ 1] io.rsocket.RSocketServer$SubscriptionHolder.put
  [ 2] io.rsocket.RSocketServer$SubscriptionHolder.access$1200
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$4
  [ 4] io.rsocket.RSocketServer$$Lambda$70.1764122602.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoJust.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [26] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [27] reactor.netty.channel.FluxReceive.drainReceiver
  [28] reactor.netty.channel.FluxReceive.onInboundNext
  [29] reactor.netty.channel.ChannelOperations.onInboundNext
  [30] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [34] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [35] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [36] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [37] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [41] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [45] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [46] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [47] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [48] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [49] io.netty.channel.nio.NioEventLoop.run
  [50] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [51] java.lang.Thread.run

--- 20000000 ns (0.09%), 2 samples
  [ 0] sun.nio.ch.SocketDispatcher.writev
  [ 1] sun.nio.ch.IOUtil.write
  [ 2] sun.nio.ch.SocketChannelImpl.write
  [ 3] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 5] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 7] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [10] io.netty.channel.AbstractChannelHandlerContext.flush
  [11] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [12] reactor.netty.channel.ChannelOperationsHandler.drain
  [13] reactor.netty.channel.ChannelOperationsHandler.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] io.netty.channel.DefaultChannelPipeline.flush
  [18] io.netty.channel.AbstractChannel.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [21] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [22] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [23] io.netty.channel.nio.NioEventLoop.run
  [24] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.util.Recycler.get
  [ 7] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 8] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 9] io.netty.buffer.PoolArena.allocate
  [10] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [11] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [12] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.buffer
  [14] io.rsocket.frame.FrameLengthFlyweight.encode
  [15] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [16] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$52.175207292.apply
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [21] reactor.core.publisher.StrictSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainFused
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [26] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [27] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [29] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [30] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] reactor.core.publisher.Operators$ScalarSubscription.request
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [35] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [36] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [37] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoMapFuseable.subscribe
  [42] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [43] reactor.core.publisher.MonoDoFinally.subscribe
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribeWith
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] io.rsocket.RSocketServer.handleRequestResponse
  [50] io.rsocket.RSocketServer.handleFrame
  [51] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [52] reactor.core.publisher.LambdaSubscriber.onNext
  [53] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [56] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [57] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [58] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [59] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [60] reactor.netty.channel.FluxReceive.drainReceiver
  [61] reactor.netty.channel.FluxReceive.onInboundNext
  [62] reactor.netty.channel.ChannelOperations.onInboundNext
  [63] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [67] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [68] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [69] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [70] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [71] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [72] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [73] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [74] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [75] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [76] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [77] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [78] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [79] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [80] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [81] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [82] io.netty.channel.nio.NioEventLoop.run
  [83] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [84] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.util.internal.PlatformDependent0.copyMemoryWithSafePointPolling
  [ 3] io.netty.util.internal.PlatformDependent0.copyMemory
  [ 4] io.netty.util.internal.PlatformDependent.copyMemory
  [ 5] io.netty.buffer.UnsafeByteBufUtil.getBytes
  [ 6] io.netty.buffer.PooledUnsafeDirectByteBuf.getBytes
  [ 7] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 8] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 9] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [10] io.netty.buffer.CompositeByteBuf.deallocate
  [11] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [12] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [13] io.netty.util.ReferenceCountUtil.release
  [14] io.netty.util.ReferenceCountUtil.safeRelease
  [15] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [16] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [17] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [18] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [19] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [20] io.netty.util.concurrent.DefaultPromise.trySuccess
  [21] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [22] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [23] io.netty.channel.ChannelOutboundBuffer.remove
  [24] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [25] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [26] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [27] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [28] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [29] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [32] io.netty.channel.AbstractChannelHandlerContext.flush
  [33] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [34] reactor.netty.channel.ChannelOperationsHandler.drain
  [35] reactor.netty.channel.ChannelOperationsHandler.flush
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [38] io.netty.channel.AbstractChannelHandlerContext.flush
  [39] io.netty.channel.DefaultChannelPipeline.flush
  [40] io.netty.channel.AbstractChannel.flush
  [41] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [42] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [43] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [44] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [45] io.netty.channel.nio.NioEventLoop.run
  [46] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [47] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] vtable stub
  [ 1] io.netty.buffer.AbstractByteBuf.order
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encodeOnlyData
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 8] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [ 9] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] reactor.core.publisher.Operators$ScalarSubscription.request
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [16] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [19] reactor.core.publisher.MonoJust.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoMapFuseable.subscribe
  [22] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [23] reactor.core.publisher.MonoDoFinally.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribeWith
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] io.rsocket.RSocketServer.handleRequestResponse
  [30] io.rsocket.RSocketServer.handleFrame
  [31] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [32] reactor.core.publisher.LambdaSubscriber.onNext
  [33] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [37] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [40] reactor.netty.channel.FluxReceive.drainReceiver
  [41] reactor.netty.channel.FluxReceive.onInboundNext
  [42] reactor.netty.channel.ChannelOperations.onInboundNext
  [43] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [49] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [50] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [58] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [61] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [62] io.netty.channel.nio.NioEventLoop.run
  [63] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [64] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.writerIndex
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractPooledDerivedByteBuf.slice
  [ 5] io.netty.buffer.PooledSlicedByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.slice
  [ 7] io.rsocket.frame.FrameLengthFlyweight.frame
  [ 8] io.rsocket.transport.netty.TcpDuplexConnection.lambda$receive$2
  [ 9] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$35.1624898305.apply
  [10] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [11] reactor.netty.channel.FluxReceive.drainReceiver
  [12] reactor.netty.channel.FluxReceive.onInboundNext
  [13] reactor.netty.channel.ChannelOperations.onInboundNext
  [14] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [18] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [19] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [21] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [25] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [29] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [30] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [31] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [33] io.netty.channel.nio.NioEventLoop.run
  [34] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.util.collection.IntObjectHashMap.remove
  [ 1] io.rsocket.RSocketServer$SubscriptionHolder.remove
  [ 2] io.rsocket.RSocketServer$SubscriptionHolder.access$900
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$7
  [ 4] io.rsocket.RSocketServer$$Lambda$73.1542880812.accept
  [ 5] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 7] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 8] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [10] reactor.core.publisher.Operators$ScalarSubscription.request
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoMapFuseable.subscribe
  [20] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [21] reactor.core.publisher.MonoDoFinally.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribeWith
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] io.rsocket.RSocketServer.handleRequestResponse
  [28] io.rsocket.RSocketServer.handleFrame
  [29] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.netty.channel.FluxReceive.drainReceiver
  [39] reactor.netty.channel.FluxReceive.onInboundNext
  [40] reactor.netty.channel.ChannelOperations.onInboundNext
  [41] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [48] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [52] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [56] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [60] io.netty.channel.nio.NioEventLoop.run
  [61] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [62] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.util.internal.PlatformDependent0.copyMemoryWithSafePointPolling
  [ 1] io.netty.util.internal.PlatformDependent0.copyMemory
  [ 2] io.netty.util.internal.PlatformDependent.copyMemory
  [ 3] io.netty.buffer.UnpooledHeapByteBuf.getBytes
  [ 4] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 5] io.netty.buffer.CompositeByteBuf.getBytes
  [ 6] io.netty.buffer.CompositeByteBuf.getBytes
  [ 7] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 8] io.netty.buffer.CompositeByteBuf.getBytes
  [ 9] io.netty.buffer.CompositeByteBuf.getBytes
  [10] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [11] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [12] io.netty.buffer.AbstractByteBuf.writeBytes
  [13] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [14] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [15] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [16] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [19] io.netty.channel.AbstractChannelHandlerContext.write
  [20] io.netty.channel.AbstractChannelHandlerContext.write
  [21] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [22] reactor.netty.channel.ChannelOperationsHandler.drain
  [23] reactor.netty.channel.ChannelOperationsHandler.flush
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [26] io.netty.channel.AbstractChannelHandlerContext.flush
  [27] io.netty.channel.DefaultChannelPipeline.flush
  [28] io.netty.channel.AbstractChannel.flush
  [29] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [30] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [31] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [32] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [33] io.netty.channel.nio.NioEventLoop.run
  [34] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.util.Recycler.get
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.newEntry
  [ 8] io.netty.buffer.PoolThreadCache$MemoryRegionCache.add
  [ 9] io.netty.buffer.PoolThreadCache.add
  [10] io.netty.buffer.PoolArena.free
  [11] io.netty.buffer.PooledByteBuf.deallocate
  [12] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [13] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [14] io.netty.buffer.AbstractDerivedByteBuf.release0
  [15] io.netty.buffer.AbstractDerivedByteBuf.release
  [16] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [17] io.netty.buffer.CompositeByteBuf.deallocate
  [18] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [19] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [20] io.netty.util.ReferenceCountUtil.release
  [21] io.netty.util.ReferenceCountUtil.safeRelease
  [22] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [23] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [24] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [25] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [26] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [27] io.netty.util.concurrent.DefaultPromise.trySuccess
  [28] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [29] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [30] io.netty.channel.ChannelOutboundBuffer.remove
  [31] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [32] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [33] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [34] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [35] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [36] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [39] io.netty.channel.AbstractChannelHandlerContext.flush
  [40] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [41] reactor.netty.channel.ChannelOperationsHandler.drain
  [42] reactor.netty.channel.ChannelOperationsHandler.flush
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [45] io.netty.channel.AbstractChannelHandlerContext.flush
  [46] io.netty.channel.DefaultChannelPipeline.flush
  [47] io.netty.channel.AbstractChannel.flush
  [48] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [49] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [50] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [51] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [52] io.netty.channel.nio.NioEventLoop.run
  [53] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [54] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.release0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 4] io.netty.util.ReferenceCountUtil.release
  [ 5] io.netty.util.ReferenceCountUtil.safeRelease
  [ 6] io.rsocket.RSocketServer.handleFrame
  [ 7] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [15] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [16] reactor.netty.channel.FluxReceive.drainReceiver
  [17] reactor.netty.channel.FluxReceive.onInboundNext
  [18] reactor.netty.channel.ChannelOperations.onInboundNext
  [19] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [25] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [26] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [30] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [34] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [37] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [38] io.netty.channel.nio.NioEventLoop.run
  [39] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [40] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 1] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 2] io.netty.buffer.CompositeByteBuf.addComponents
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encodeOnlyData
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 6] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [ 7] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [ 8] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [10] reactor.core.publisher.Operators$ScalarSubscription.request
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoMapFuseable.subscribe
  [20] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [21] reactor.core.publisher.MonoDoFinally.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribeWith
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] io.rsocket.RSocketServer.handleRequestResponse
  [28] io.rsocket.RSocketServer.handleFrame
  [29] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.netty.channel.FluxReceive.drainReceiver
  [39] reactor.netty.channel.FluxReceive.onInboundNext
  [40] reactor.netty.channel.ChannelOperations.onInboundNext
  [41] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [48] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [52] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [56] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [60] io.netty.channel.nio.NioEventLoop.run
  [61] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [62] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.AbstractChannelHandlerContext.findContextOutbound
  [ 1] io.netty.channel.AbstractChannelHandlerContext.read
  [ 2] io.netty.channel.ChannelDuplexHandler.read
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 4] io.netty.channel.AbstractChannelHandlerContext.read
  [ 5] io.netty.channel.DefaultChannelPipeline.read
  [ 6] io.netty.channel.AbstractChannel.read
  [ 7] reactor.netty.channel.FluxReceive.drainReceiver
  [ 8] reactor.netty.channel.FluxReceive.onInboundNext
  [ 9] reactor.netty.channel.ChannelOperations.onInboundNext
  [10] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [13] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [14] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [15] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [16] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [17] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [21] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [25] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [27] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [28] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [29] io.netty.channel.nio.NioEventLoop.run
  [30] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 1] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 7] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] io.netty.channel.AbstractChannelHandlerContext.write
  [14] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [15] reactor.netty.channel.ChannelOperationsHandler.drain
  [16] reactor.netty.channel.ChannelOperationsHandler.flush
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [19] io.netty.channel.AbstractChannelHandlerContext.flush
  [20] io.netty.channel.DefaultChannelPipeline.flush
  [21] io.netty.channel.AbstractChannel.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [24] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [25] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [26] io.netty.channel.nio.NioEventLoop.run
  [27] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.lazySet
  [ 1] reactor.util.concurrent.SpscLinkedArrayQueue.test
  [ 2] reactor.netty.channel.ChannelOperationsHandler.write
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 5] io.netty.channel.AbstractChannelHandlerContext.write
  [ 6] io.netty.channel.AbstractChannelHandlerContext.write
  [ 7] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 8] reactor.netty.channel.ChannelOperationsHandler.drain
  [ 9] reactor.netty.channel.ChannelOperationsHandler.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] io.netty.channel.DefaultChannelPipeline.flush
  [14] io.netty.channel.AbstractChannel.flush
  [15] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [16] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [17] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [18] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [19] io.netty.channel.nio.NioEventLoop.run
  [20] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.util.Recycler.get
  [ 7] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 8] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 9] io.netty.buffer.PoolArena.allocate
  [10] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [11] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [12] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [13] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [14] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [15] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [16] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [19] io.netty.channel.AbstractChannelHandlerContext.write
  [20] io.netty.channel.AbstractChannelHandlerContext.write
  [21] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [22] reactor.netty.channel.ChannelOperationsHandler.drain
  [23] reactor.netty.channel.ChannelOperationsHandler.flush
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [26] io.netty.channel.AbstractChannelHandlerContext.flush
  [27] io.netty.channel.DefaultChannelPipeline.flush
  [28] io.netty.channel.AbstractChannel.flush
  [29] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [30] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [31] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [32] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [33] io.netty.channel.nio.NioEventLoop.run
  [34] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.deallocate
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 4] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 5] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [ 6] io.netty.buffer.CompositeByteBuf.deallocate
  [ 7] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 8] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 9] io.netty.util.ReferenceCountUtil.release
  [10] io.netty.util.ReferenceCountUtil.safeRelease
  [11] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [12] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [13] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [14] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [15] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [16] io.netty.util.concurrent.DefaultPromise.trySuccess
  [17] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [18] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [19] io.netty.channel.ChannelOutboundBuffer.remove
  [20] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [21] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [22] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [23] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [24] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [25] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [28] io.netty.channel.AbstractChannelHandlerContext.flush
  [29] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [30] reactor.netty.channel.ChannelOperationsHandler.drain
  [31] reactor.netty.channel.ChannelOperationsHandler.flush
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [34] io.netty.channel.AbstractChannelHandlerContext.flush
  [35] io.netty.channel.DefaultChannelPipeline.flush
  [36] io.netty.channel.AbstractChannel.flush
  [37] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [38] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [39] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [40] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [41] io.netty.channel.nio.NioEventLoop.run
  [42] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [43] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.nio.Buffer.position
  [ 1] io.netty.util.internal.InternalThreadLocalMap.get
  [ 2] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 3] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 5] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 7] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [10] io.netty.channel.AbstractChannelHandlerContext.flush
  [11] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [12] reactor.netty.channel.ChannelOperationsHandler.drain
  [13] reactor.netty.channel.ChannelOperationsHandler.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] io.netty.channel.DefaultChannelPipeline.flush
  [18] io.netty.channel.AbstractChannel.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [21] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [22] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [23] io.netty.channel.nio.NioEventLoop.run
  [24] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.ChannelOutboundBuffer.addFlush
  [ 1] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 2] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 5] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 6] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 7] reactor.netty.channel.ChannelOperationsHandler.drain
  [ 8] reactor.netty.channel.ChannelOperationsHandler.flush
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [11] io.netty.channel.AbstractChannelHandlerContext.flush
  [12] io.netty.channel.DefaultChannelPipeline.flush
  [13] io.netty.channel.AbstractChannel.flush
  [14] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [15] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [16] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [17] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [18] io.netty.channel.nio.NioEventLoop.run
  [19] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [20] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 1] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 2] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 3] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 5] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 8] io.netty.channel.AbstractChannelHandlerContext.write
  [ 9] io.netty.channel.AbstractChannelHandlerContext.write
  [10] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [11] reactor.netty.channel.ChannelOperationsHandler.drain
  [12] reactor.netty.channel.ChannelOperationsHandler.flush
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [15] io.netty.channel.AbstractChannelHandlerContext.flush
  [16] io.netty.channel.DefaultChannelPipeline.flush
  [17] io.netty.channel.AbstractChannel.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [20] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [21] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [22] io.netty.channel.nio.NioEventLoop.run
  [23] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.SocketDispatcher.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.SocketChannelImpl.write
  [ 5] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 7] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.isDirect
  [ 3] io.netty.buffer.CompositeByteBuf.isDirect
  [ 4] io.netty.buffer.AbstractUnpooledSlicedByteBuf.isDirect
  [ 5] io.netty.buffer.CompositeByteBuf.isDirect
  [ 6] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 8] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [11] io.netty.channel.AbstractChannelHandlerContext.write
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.nio.AbstractNioChannel.eventLoop
  [ 1] io.netty.channel.nio.AbstractNioChannel.eventLoop
  [ 2] io.netty.channel.AbstractChannelHandlerContext.executor
  [ 3] io.netty.channel.AbstractChannelHandlerContext.write
  [ 4] io.netty.channel.AbstractChannelHandlerContext.write
  [ 5] io.netty.channel.DefaultChannelPipeline.write
  [ 6] io.netty.channel.AbstractChannel.write
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [11] reactor.core.publisher.StrictSubscriber.onNext
  [12] io.rsocket.internal.UnboundedProcessor.drainFused
  [13] io.rsocket.internal.UnboundedProcessor.drain
  [14] io.rsocket.internal.UnboundedProcessor.onNext
  [15] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [16] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [17] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [19] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoMapFuseable.subscribe
  [32] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [33] reactor.core.publisher.MonoDoFinally.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribeWith
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] io.rsocket.RSocketServer.handleRequestResponse
  [40] io.rsocket.RSocketServer.handleFrame
  [41] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [42] reactor.core.publisher.LambdaSubscriber.onNext
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [47] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [48] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [49] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [50] reactor.netty.channel.FluxReceive.drainReceiver
  [51] reactor.netty.channel.FluxReceive.onInboundNext
  [52] reactor.netty.channel.ChannelOperations.onInboundNext
  [53] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [57] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [58] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [59] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [60] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [64] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [67] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [68] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [69] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [70] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [71] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [72] io.netty.channel.nio.NioEventLoop.run
  [73] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [74] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.AbstractChannelHandlerContext.findContextOutbound
  [ 1] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 2] io.netty.channel.DefaultChannelPipeline.flush
  [ 3] io.netty.channel.AbstractChannel.flush
  [ 4] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [ 6] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [ 7] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [ 8] io.netty.channel.nio.NioEventLoop.run
  [ 9] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [10] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractPooledDerivedByteBuf.slice
  [ 1] io.netty.buffer.PooledSlicedByteBuf.slice
  [ 2] io.netty.buffer.AbstractByteBuf.slice
  [ 3] io.rsocket.frame.FrameLengthFlyweight.frame
  [ 4] io.rsocket.transport.netty.TcpDuplexConnection.lambda$receive$2
  [ 5] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$35.1624898305.apply
  [ 6] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [ 7] reactor.netty.channel.FluxReceive.drainReceiver
  [ 8] reactor.netty.channel.FluxReceive.onInboundNext
  [ 9] reactor.netty.channel.ChannelOperations.onInboundNext
  [10] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [13] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [14] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [15] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [16] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [17] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [21] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [25] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [27] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [28] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [29] io.netty.channel.nio.NioEventLoop.run
  [30] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.netty.buffer.PooledUnsafeDirectByteBuf.newInternalNioBuffer
  [ 7] io.netty.buffer.PooledUnsafeDirectByteBuf.newInternalNioBuffer
  [ 8] io.netty.buffer.PooledByteBuf.internalNioBuffer
  [ 9] io.netty.buffer.PooledUnsafeDirectByteBuf.internalNioBuffer
  [10] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [11] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [12] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [13] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [14] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [15] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [20] reactor.netty.channel.ChannelOperationsHandler.drain
  [21] reactor.netty.channel.ChannelOperationsHandler.flush
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [24] io.netty.channel.AbstractChannelHandlerContext.flush
  [25] io.netty.channel.DefaultChannelPipeline.flush
  [26] io.netty.channel.AbstractChannel.flush
  [27] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [28] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [29] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [30] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [31] io.netty.channel.nio.NioEventLoop.run
  [32] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.rsocket.util.ByteBufPayload.create
  [ 1] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 2] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 3] io.rsocket.RSocketServer.handleFrame
  [ 4] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [12] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [13] reactor.netty.channel.FluxReceive.drainReceiver
  [14] reactor.netty.channel.FluxReceive.onInboundNext
  [15] reactor.netty.channel.ChannelOperations.onInboundNext
  [16] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [23] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [31] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [35] io.netty.channel.nio.NioEventLoop.run
  [36] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.util.Recycler.get
  [ 7] io.netty.buffer.PooledSlicedByteBuf.newInstance0
  [ 8] io.netty.buffer.PooledSlicedByteBuf.newInstance
  [ 9] io.netty.buffer.PooledByteBuf.retainedSlice
  [10] io.netty.handler.codec.LengthFieldBasedFrameDecoder.extractFrame
  [11] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [12] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [13] io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection
  [14] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [15] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [19] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [23] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [24] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [25] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [27] io.netty.channel.nio.NioEventLoop.run
  [28] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 1] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractPooledDerivedByteBuf.slice
  [ 3] io.netty.buffer.PooledSlicedByteBuf.slice
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.frame.FrameLengthFlyweight.frame
  [ 6] io.rsocket.transport.netty.TcpDuplexConnection.lambda$receive$2
  [ 7] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$35.1624898305.apply
  [ 8] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [ 9] reactor.netty.channel.FluxReceive.drainReceiver
  [10] reactor.netty.channel.FluxReceive.onInboundNext
  [11] reactor.netty.channel.ChannelOperations.onInboundNext
  [12] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [15] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [16] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [17] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [18] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [19] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [23] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [27] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [28] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [29] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [30] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [31] io.netty.channel.nio.NioEventLoop.run
  [32] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [33] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] jbyte_disjoint_arraycopy
  [ 1] io.netty.buffer.UnsafeByteBufUtil.getBytes
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.getBytes
  [ 3] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 4] io.netty.buffer.CompositeByteBuf.getBytes
  [ 5] io.netty.buffer.CompositeByteBuf.getBytes
  [ 6] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 7] io.netty.buffer.CompositeByteBuf.getBytes
  [ 8] io.netty.buffer.CompositeByteBuf.getBytes
  [ 9] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [10] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [11] io.netty.buffer.AbstractByteBuf.writeBytes
  [12] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [13] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [14] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [15] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [18] io.netty.channel.AbstractChannelHandlerContext.write
  [19] io.netty.channel.AbstractChannelHandlerContext.write
  [20] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [21] reactor.netty.channel.ChannelOperationsHandler.drain
  [22] reactor.netty.channel.ChannelOperationsHandler.flush
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [25] io.netty.channel.AbstractChannelHandlerContext.flush
  [26] io.netty.channel.DefaultChannelPipeline.flush
  [27] io.netty.channel.AbstractChannel.flush
  [28] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [29] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [30] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [31] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [32] io.netty.channel.nio.NioEventLoop.run
  [33] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.PoolArena.normalizeCapacity
  [ 1] io.netty.buffer.PoolArena.allocate
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 7] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 8] io.rsocket.frame.RequestFlyweight.encode
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [10] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [11] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [14] reactor.core.publisher.Operators$ScalarSubscription.request
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [17] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [18] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [21] reactor.core.publisher.MonoJust.subscribe
  [22] reactor.core.publisher.MonoPeekFuseable.subscribe
  [23] reactor.core.publisher.MonoMapFuseable.subscribe
  [24] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [25] reactor.core.publisher.MonoDoFinally.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribeWith
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] io.rsocket.RSocketServer.handleRequestResponse
  [32] io.rsocket.RSocketServer.handleFrame
  [33] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [34] reactor.core.publisher.LambdaSubscriber.onNext
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [37] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [39] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [40] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [41] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [42] reactor.netty.channel.FluxReceive.drainReceiver
  [43] reactor.netty.channel.FluxReceive.onInboundNext
  [44] reactor.netty.channel.ChannelOperations.onInboundNext
  [45] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [50] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [51] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [52] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [56] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [60] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [61] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [62] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [63] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [64] io.netty.channel.nio.NioEventLoop.run
  [65] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [66] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.capacity
  [ 1] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 3] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 4] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 5] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 7] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [10] io.netty.channel.AbstractChannelHandlerContext.write
  [11] io.netty.channel.AbstractChannelHandlerContext.write
  [12] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [13] reactor.netty.channel.ChannelOperationsHandler.drain
  [14] reactor.netty.channel.ChannelOperationsHandler.flush
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [17] io.netty.channel.AbstractChannelHandlerContext.flush
  [18] io.netty.channel.DefaultChannelPipeline.flush
  [19] io.netty.channel.AbstractChannel.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [22] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [23] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [24] io.netty.channel.nio.NioEventLoop.run
  [25] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractPooledDerivedByteBuf.slice
  [ 5] io.netty.buffer.PooledSlicedByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.slice
  [ 7] io.rsocket.frame.FrameLengthFlyweight.frame
  [ 8] io.rsocket.transport.netty.TcpDuplexConnection.lambda$receive$2
  [ 9] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$35.1624898305.apply
  [10] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [11] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [12] reactor.netty.channel.FluxReceive.drainReceiver
  [13] reactor.netty.channel.FluxReceive.onInboundNext
  [14] reactor.netty.channel.ChannelOperations.onInboundNext
  [15] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [19] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [22] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [26] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [30] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [31] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [34] io.netty.channel.nio.NioEventLoop.run
  [35] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 4] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 5] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [ 6] io.netty.buffer.CompositeByteBuf.deallocate
  [ 7] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 8] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 9] io.netty.util.ReferenceCountUtil.release
  [10] io.netty.util.ReferenceCountUtil.safeRelease
  [11] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [12] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [13] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [14] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [15] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [16] io.netty.util.concurrent.DefaultPromise.trySuccess
  [17] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [18] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [19] io.netty.channel.ChannelOutboundBuffer.remove
  [20] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [21] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [22] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [23] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [24] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [25] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [28] io.netty.channel.AbstractChannelHandlerContext.flush
  [29] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [30] reactor.netty.channel.ChannelOperationsHandler.drain
  [31] reactor.netty.channel.ChannelOperationsHandler.flush
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [34] io.netty.channel.AbstractChannelHandlerContext.flush
  [35] io.netty.channel.DefaultChannelPipeline.flush
  [36] io.netty.channel.AbstractChannel.flush
  [37] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [38] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [39] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [40] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [41] io.netty.channel.nio.NioEventLoop.run
  [42] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [43] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 1] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 7] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 8] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 9] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$52.175207292.apply
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [12] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [13] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [14] reactor.core.publisher.StrictSubscriber.onNext
  [15] io.rsocket.internal.UnboundedProcessor.drainFused
  [16] io.rsocket.internal.UnboundedProcessor.drain
  [17] io.rsocket.internal.UnboundedProcessor.onNext
  [18] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [19] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [20] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [22] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] reactor.core.publisher.Operators$ScalarSubscription.request
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [28] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [29] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [30] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoMapFuseable.subscribe
  [35] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [36] reactor.core.publisher.MonoDoFinally.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribeWith
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] io.rsocket.RSocketServer.handleRequestResponse
  [43] io.rsocket.RSocketServer.handleFrame
  [44] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [45] reactor.core.publisher.LambdaSubscriber.onNext
  [46] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [48] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [50] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [51] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [52] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [53] reactor.netty.channel.FluxReceive.drainReceiver
  [54] reactor.netty.channel.FluxReceive.onInboundNext
  [55] reactor.netty.channel.ChannelOperations.onInboundNext
  [56] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [60] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [61] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [62] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [63] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [67] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [68] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [69] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [70] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [71] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [72] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [73] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [74] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [75] io.netty.channel.nio.NioEventLoop.run
  [76] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [77] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.isDirect
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.isDirect
  [ 2] io.netty.buffer.CompositeByteBuf.isDirect
  [ 3] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 5] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 8] io.netty.channel.AbstractChannelHandlerContext.write
  [ 9] io.netty.channel.AbstractChannelHandlerContext.write
  [10] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [11] reactor.netty.channel.ChannelOperationsHandler.drain
  [12] reactor.netty.channel.ChannelOperationsHandler.flush
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [15] io.netty.channel.AbstractChannelHandlerContext.flush
  [16] io.netty.channel.DefaultChannelPipeline.flush
  [17] io.netty.channel.AbstractChannel.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [20] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [21] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [22] io.netty.channel.nio.NioEventLoop.run
  [23] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [24] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.UnsafeByteBufUtil.getShort
  [ 1] io.netty.buffer.PooledUnsafeDirectByteBuf._getShort
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf._getShort
  [ 3] io.netty.buffer.AbstractByteBuf.readShort
  [ 4] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 5] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 6] io.rsocket.frame.RequestFlyweight.data
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 8] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.RSocketServer.handleFrame
  [11] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [12] reactor.core.publisher.LambdaSubscriber.onNext
  [13] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [17] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [18] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [19] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [20] reactor.netty.channel.FluxReceive.drainReceiver
  [21] reactor.netty.channel.FluxReceive.onInboundNext
  [22] reactor.netty.channel.ChannelOperations.onInboundNext
  [23] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [28] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [30] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [34] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [37] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [38] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [39] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [40] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [42] io.netty.channel.nio.NioEventLoop.run
  [43] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [44] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf.unwrap
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.getBytes
  [ 3] io.netty.buffer.CompositeByteBuf.getBytes
  [ 4] io.netty.buffer.CompositeByteBuf.getBytes
  [ 5] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [ 6] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 7] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 8] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 9] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [10] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [11] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [14] io.netty.channel.AbstractChannelHandlerContext.write
  [15] io.netty.channel.AbstractChannelHandlerContext.write
  [16] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [17] reactor.netty.channel.ChannelOperationsHandler.drain
  [18] reactor.netty.channel.ChannelOperationsHandler.flush
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [21] io.netty.channel.AbstractChannelHandlerContext.flush
  [22] io.netty.channel.DefaultChannelPipeline.flush
  [23] io.netty.channel.AbstractChannel.flush
  [24] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [25] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [26] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [27] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [28] io.netty.channel.nio.NioEventLoop.run
  [29] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [30] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.AbstractChannelHandlerContext.write
  [ 1] io.netty.channel.AbstractChannelHandlerContext.write
  [ 2] io.netty.channel.DefaultChannelPipeline.write
  [ 3] io.netty.channel.AbstractChannel.write
  [ 4] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 8] reactor.core.publisher.StrictSubscriber.onNext
  [ 9] io.rsocket.internal.UnboundedProcessor.drainFused
  [10] io.rsocket.internal.UnboundedProcessor.drain
  [11] io.rsocket.internal.UnboundedProcessor.onNext
  [12] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [13] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [14] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [15] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [16] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [23] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoMapFuseable.subscribe
  [29] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [30] reactor.core.publisher.MonoDoFinally.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribeWith
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] io.rsocket.RSocketServer.handleRequestResponse
  [37] io.rsocket.RSocketServer.handleFrame
  [38] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [39] reactor.core.publisher.LambdaSubscriber.onNext
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [44] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [45] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [46] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [47] reactor.netty.channel.FluxReceive.drainReceiver
  [48] reactor.netty.channel.FluxReceive.onInboundNext
  [49] reactor.netty.channel.ChannelOperations.onInboundNext
  [50] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [57] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [61] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [64] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [65] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [66] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [69] io.netty.channel.nio.NioEventLoop.run
  [70] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [71] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.handler.codec.CodecOutputList.insert
  [ 1] io.netty.handler.codec.CodecOutputList.add
  [ 2] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [ 3] io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection
  [ 4] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [ 5] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 8] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [13] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [14] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [15] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [16] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [17] io.netty.channel.nio.NioEventLoop.run
  [18] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] reactor.core.publisher.Mono.subscribe
  [ 1] reactor.core.publisher.Mono.subscribe
  [ 2] reactor.core.publisher.Mono.subscribe
  [ 3] io.rsocket.RSocketServer.handleRequestResponse
  [ 4] io.rsocket.RSocketServer.handleFrame
  [ 5] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [ 6] reactor.core.publisher.LambdaSubscriber.onNext
  [ 7] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [11] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [12] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [13] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [14] reactor.netty.channel.FluxReceive.drainReceiver
  [15] reactor.netty.channel.FluxReceive.onInboundNext
  [16] reactor.netty.channel.ChannelOperations.onInboundNext
  [17] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [24] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [28] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [32] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [36] io.netty.channel.nio.NioEventLoop.run
  [37] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.util.collection.IntObjectHashMap.indexOf
  [ 1] io.netty.util.collection.IntObjectHashMap.remove
  [ 2] io.rsocket.RSocketServer$SubscriptionHolder.remove
  [ 3] io.rsocket.RSocketServer$SubscriptionHolder.access$900
  [ 4] io.rsocket.RSocketServer.lambda$handleRequestResponse$7
  [ 5] io.rsocket.RSocketServer$$Lambda$73.1542880812.accept
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 8] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [11] reactor.core.publisher.Operators$ScalarSubscription.request
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.MonoJust.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoMapFuseable.subscribe
  [21] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [22] reactor.core.publisher.MonoDoFinally.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribeWith
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] io.rsocket.RSocketServer.handleRequestResponse
  [29] io.rsocket.RSocketServer.handleFrame
  [30] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.netty.channel.FluxReceive.drainReceiver
  [40] reactor.netty.channel.FluxReceive.onInboundNext
  [41] reactor.netty.channel.ChannelOperations.onInboundNext
  [42] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [49] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [57] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [61] io.netty.channel.nio.NioEventLoop.run
  [62] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [63] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.slice
  [ 1] io.netty.buffer.AbstractByteBuf.slice
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 6] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 7] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$52.175207292.apply
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [12] reactor.core.publisher.StrictSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainFused
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [17] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [18] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [20] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoMapFuseable.subscribe
  [33] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [34] reactor.core.publisher.MonoDoFinally.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribeWith
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] io.rsocket.RSocketServer.handleRequestResponse
  [41] io.rsocket.RSocketServer.handleFrame
  [42] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [43] reactor.core.publisher.LambdaSubscriber.onNext
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [48] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [49] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [50] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [51] reactor.netty.channel.FluxReceive.drainReceiver
  [52] reactor.netty.channel.FluxReceive.onInboundNext
  [53] reactor.netty.channel.ChannelOperations.onInboundNext
  [54] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [58] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [59] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [60] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [61] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [65] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [66] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [67] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [68] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [69] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [70] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [71] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [72] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [73] io.netty.channel.nio.NioEventLoop.run
  [74] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [75] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [ 1] io.netty.util.ReferenceCountUtil.release
  [ 2] io.netty.util.ReferenceCountUtil.safeRelease
  [ 3] io.netty.channel.ChannelOutboundBuffer.remove
  [ 4] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [ 5] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 7] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 1] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 2] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 3] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 5] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 9] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [10] reactor.netty.channel.ChannelOperationsHandler.drain
  [11] reactor.netty.channel.ChannelOperationsHandler.flush
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [14] io.netty.channel.AbstractChannelHandlerContext.flush
  [15] io.netty.channel.DefaultChannelPipeline.flush
  [16] io.netty.channel.AbstractChannel.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [19] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [20] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [21] io.netty.channel.nio.NioEventLoop.run
  [22] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 2] java.lang.ThreadLocal.get
  [ 3] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 4] io.netty.util.internal.InternalThreadLocalMap.get
  [ 5] io.netty.util.concurrent.FastThreadLocal.get
  [ 6] io.netty.util.Recycler.get
  [ 7] io.netty.channel.ChannelOutboundBuffer$Entry.newInstance
  [ 8] io.netty.channel.ChannelOutboundBuffer.addMessage
  [ 9] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [10] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [13] io.netty.channel.AbstractChannelHandlerContext.write
  [14] io.netty.channel.AbstractChannelHandlerContext.write
  [15] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [16] reactor.netty.channel.ChannelOperationsHandler.drain
  [17] reactor.netty.channel.ChannelOperationsHandler.flush
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [20] io.netty.channel.AbstractChannelHandlerContext.flush
  [21] io.netty.channel.DefaultChannelPipeline.flush
  [22] io.netty.channel.AbstractChannel.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [24] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [25] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [26] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [27] io.netty.channel.nio.NioEventLoop.run
  [28] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.util.ArrayList.elementData
  [ 1] java.util.ArrayList.get
  [ 2] io.netty.buffer.CompositeByteBuf.capacity
  [ 3] io.netty.buffer.UnsafeByteBufUtil.setBytes
  [ 4] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 5] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 6] io.netty.channel.nio.AbstractNioChannel.newDirectBuffer
  [ 7] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] io.netty.channel.AbstractChannelHandlerContext.write
  [14] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [15] reactor.netty.channel.ChannelOperationsHandler.drain
  [16] reactor.netty.channel.ChannelOperationsHandler.flush
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [19] io.netty.channel.AbstractChannelHandlerContext.flush
  [20] io.netty.channel.DefaultChannelPipeline.flush
  [21] io.netty.channel.AbstractChannel.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [24] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [25] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [26] io.netty.channel.nio.NioEventLoop.run
  [27] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [28] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.nio.AbstractNioChannel.doBeginRead
  [ 1] io.netty.channel.AbstractChannel$AbstractUnsafe.beginRead
  [ 2] io.netty.channel.DefaultChannelPipeline$HeadContext.read
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 4] io.netty.channel.AbstractChannelHandlerContext.read
  [ 5] io.netty.channel.ChannelDuplexHandler.read
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 7] io.netty.channel.AbstractChannelHandlerContext.read
  [ 8] io.netty.channel.DefaultChannelPipeline.read
  [ 9] io.netty.channel.AbstractChannel.read
  [10] reactor.netty.channel.FluxReceive.drainReceiver
  [11] reactor.netty.channel.FluxReceive.onInboundNext
  [12] reactor.netty.channel.ChannelOperations.onInboundNext
  [13] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [17] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [18] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [19] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [20] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [24] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [28] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [29] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [30] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [31] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [32] io.netty.channel.nio.NioEventLoop.run
  [33] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.readableBytes
  [ 1] io.netty.buffer.AbstractByteBuf.slice
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encodeOnlyData
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 8] io.rsocket.RSocketServer.lambda$handleRequestResponse$5
  [ 9] io.rsocket.RSocketServer$$Lambda$71.373447246.apply
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] reactor.core.publisher.Operators$ScalarSubscription.request
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [16] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [19] reactor.core.publisher.MonoJust.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoMapFuseable.subscribe
  [22] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [23] reactor.core.publisher.MonoDoFinally.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribeWith
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] io.rsocket.RSocketServer.handleRequestResponse
  [30] io.rsocket.RSocketServer.handleFrame
  [31] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [32] reactor.core.publisher.LambdaSubscriber.onNext
  [33] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [37] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [40] reactor.netty.channel.FluxReceive.drainReceiver
  [41] reactor.netty.channel.FluxReceive.onInboundNext
  [42] reactor.netty.channel.ChannelOperations.onInboundNext
  [43] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [49] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [50] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [58] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [61] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [62] io.netty.channel.nio.NioEventLoop.run
  [63] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [64] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.buffer.PoolThreadCache.cache
  [ 1] io.netty.buffer.PoolThreadCache.add
  [ 2] io.netty.buffer.PoolArena.free
  [ 3] io.netty.buffer.PooledByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 7] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 8] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [ 9] io.netty.buffer.CompositeByteBuf.deallocate
  [10] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [11] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [12] io.netty.util.ReferenceCountUtil.release
  [13] io.netty.util.ReferenceCountUtil.safeRelease
  [14] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [15] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [16] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [17] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [18] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [19] io.netty.util.concurrent.DefaultPromise.trySuccess
  [20] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [21] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [22] io.netty.channel.ChannelOutboundBuffer.remove
  [23] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [24] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [25] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [26] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [27] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [28] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [31] io.netty.channel.AbstractChannelHandlerContext.flush
  [32] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [33] reactor.netty.channel.ChannelOperationsHandler.drain
  [34] reactor.netty.channel.ChannelOperationsHandler.flush
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [37] io.netty.channel.AbstractChannelHandlerContext.flush
  [38] io.netty.channel.DefaultChannelPipeline.flush
  [39] io.netty.channel.AbstractChannel.flush
  [40] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [41] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [42] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [43] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [44] io.netty.channel.nio.NioEventLoop.run
  [45] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [46] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.nio.AbstractNioByteChannel.clearOpWrite
  [ 1] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 2] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 3] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 5] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 9] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [10] reactor.netty.channel.ChannelOperationsHandler.drain
  [11] reactor.netty.channel.ChannelOperationsHandler.flush
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [14] io.netty.channel.AbstractChannelHandlerContext.flush
  [15] io.netty.channel.DefaultChannelPipeline.flush
  [16] io.netty.channel.AbstractChannel.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [19] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [20] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [21] io.netty.channel.nio.NioEventLoop.run
  [22] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [23] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] java.util.ArrayList.get
  [ 1] io.netty.buffer.CompositeByteBuf.deallocate
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 3] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 4] io.netty.util.ReferenceCountUtil.release
  [ 5] io.netty.util.ReferenceCountUtil.safeRelease
  [ 6] io.rsocket.transport.netty.SendPublisher.lambda$writeCleanupPromise$0
  [ 7] io.rsocket.transport.netty.SendPublisher$$Lambda$76.1670547598.operationComplete
  [ 8] io.netty.util.concurrent.DefaultPromise.notifyListener0
  [ 9] io.netty.util.concurrent.DefaultPromise.notifyListenersNow
  [10] io.netty.util.concurrent.DefaultPromise.notifyListeners
  [11] io.netty.util.concurrent.DefaultPromise.trySuccess
  [12] io.netty.util.internal.PromiseNotificationUtil.trySuccess
  [13] io.netty.channel.ChannelOutboundBuffer.safeSuccess
  [14] io.netty.channel.ChannelOutboundBuffer.remove
  [15] io.netty.channel.ChannelOutboundBuffer.removeBytes
  [16] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [17] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [18] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [19] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [20] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [23] io.netty.channel.AbstractChannelHandlerContext.flush
  [24] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [25] reactor.netty.channel.ChannelOperationsHandler.drain
  [26] reactor.netty.channel.ChannelOperationsHandler.flush
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [29] io.netty.channel.AbstractChannelHandlerContext.flush
  [30] io.netty.channel.DefaultChannelPipeline.flush
  [31] io.netty.channel.AbstractChannel.flush
  [32] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [33] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.499428539.run
  [34] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [35] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [36] io.netty.channel.nio.NioEventLoop.run
  [37] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [38] java.lang.Thread.run

--- 10000000 ns (0.05%), 1 sample
  [ 0] io.netty.channel.DefaultChannelPipeline.newPromise
  [ 1] io.netty.channel.AbstractChannel.newPromise
  [ 2] io.rsocket.transport.netty.SendPublisher.writeCleanupPromise
  [ 3] io.rsocket.transport.netty.SendPublisher.access$2000
  [ 4] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 8] reactor.core.publisher.StrictSubscriber.onNext
  [ 9] io.rsocket.internal.UnboundedProcessor.drainFused
  [10] io.rsocket.internal.UnboundedProcessor.drain
  [11] io.rsocket.internal.UnboundedProcessor.onNext
  [12] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [13] io.rsocket.RSocketServer$$Lambda$74.1201844521.accept
  [14] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [15] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [16] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [23] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoMapFuseable.subscribe
  [29] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [30] reactor.core.publisher.MonoDoFinally.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribeWith
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] io.rsocket.RSocketServer.handleRequestResponse
  [37] io.rsocket.RSocketServer.handleFrame
  [38] io.rsocket.RSocketServer$$Lambda$62.1351880002.accept
  [39] reactor.core.publisher.LambdaSubscriber.onNext
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [44] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [45] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [46] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [47] reactor.netty.channel.FluxReceive.drainReceiver
  [48] reactor.netty.channel.FluxReceive.onInboundNext
  [49] reactor.netty.channel.ChannelOperations.onInboundNext
  [50] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [54] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [57] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [61] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [64] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [65] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [66] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [69] io.netty.channel.nio.NioEventLoop.run
  [70] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [71] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 13450000000   62.76%     1345  sun.nio.ch.FileDispatcherImpl.writev0
  6380000000   29.77%      638  sun.nio.ch.KQueueArrayWrapper.kevent0
   500000000    2.33%       50  sun.nio.ch.FileDispatcherImpl.read0
    70000000    0.33%        7  java.lang.ThreadLocal$ThreadLocalMap.getEntry
    40000000    0.19%        4  io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields.lvProducerLimit
    40000000    0.19%        4  jbyte_disjoint_arraycopy
    40000000    0.19%        4  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
    40000000    0.19%        4  io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
    30000000    0.14%        3  io.netty.buffer.PoolArena.normalizeCapacity
    30000000    0.14%        3  io.netty.buffer.CompositeByteBuf.addComponent0
    30000000    0.14%        3  sun.nio.ch.NativeThread.current
    20000000    0.09%        2  io.netty.buffer.UnpooledSlicedByteBuf.unwrap
    20000000    0.09%        2  io.netty.buffer.AbstractReferenceCountedByteBuf.release0
    20000000    0.09%        2  io.netty.buffer.AbstractByteBuf.<init>
    20000000    0.09%        2  io.netty.util.concurrent.DefaultPromise.addListener
    20000000    0.09%        2  reactor.netty.channel.ChannelOperationsHandler.flush
    20000000    0.09%        2  io.netty.channel.AbstractChannelHandlerContext.findContextOutbound
    20000000    0.09%        2  reactor.netty.channel.ChannelOperationsHandler.doWrite
    20000000    0.09%        2  sun.nio.ch.SocketDispatcher.writev
    20000000    0.09%        2  io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
    20000000    0.09%        2  io.netty.util.collection.IntObjectHashMap.put
    20000000    0.09%        2  reactor.core.publisher.Mono.subscribe
    10000000    0.05%        1  io.netty.util.collection.IntObjectHashMap.indexOf
    10000000    0.05%        1  io.netty.handler.codec.CodecOutputList.insert
    10000000    0.05%        1  io.netty.channel.nio.AbstractNioByteChannel.clearOpWrite
    10000000    0.05%        1  java.util.ArrayList.elementData
    10000000    0.05%        1  vtable stub
    10000000    0.05%        1  io.netty.buffer.AbstractReferenceCountedByteBuf.release
    10000000    0.05%        1  reactor.core.publisher.Mono.subscribe
    10000000    0.05%        1  java.util.ArrayList.get
    10000000    0.05%        1  io.netty.channel.DefaultChannelPipeline.newPromise
    10000000    0.05%        1  io.netty.util.collection.IntObjectHashMap.remove
    10000000    0.05%        1  io.netty.buffer.AbstractByteBuf.readableBytes
    10000000    0.05%        1  io.netty.buffer.AbstractPooledDerivedByteBuf.slice
    10000000    0.05%        1  sun.nio.ch.FileDispatcherImpl.write0
    10000000    0.05%        1  io.netty.channel.nio.AbstractNioChannel.doBeginRead
    10000000    0.05%        1  io.netty.buffer.CompositeByteBuf.capacity
    10000000    0.05%        1  io.netty.buffer.PoolThreadCache.cache
    10000000    0.05%        1  io.netty.channel.ChannelOutboundBuffer.nioBuffers
    10000000    0.05%        1  io.netty.buffer.CompositeByteBuf.deallocate
    10000000    0.05%        1  java.nio.Buffer.<init>
    10000000    0.05%        1  io.netty.channel.ChannelOutboundBuffer.addFlush
    10000000    0.05%        1  io.netty.channel.AbstractChannelHandlerContext.write
    10000000    0.05%        1  io.netty.buffer.AbstractByteBufAllocator.directBuffer
    10000000    0.05%        1  io.netty.util.internal.PlatformDependent0.copyMemoryWithSafePointPolling
    10000000    0.05%        1  io.rsocket.util.ByteBufPayload.create
    10000000    0.05%        1  io.netty.buffer.UnsafeByteBufUtil.getShort
    10000000    0.05%        1  java.nio.Buffer.position
    10000000    0.05%        1  io.netty.buffer.AbstractByteBuf.slice
    10000000    0.05%        1  io.netty.buffer.UnpooledSlicedByteBuf.<init>
    10000000    0.05%        1  io.netty.channel.nio.AbstractNioChannel.eventLoop
    10000000    0.05%        1  java.util.concurrent.atomic.AtomicReferenceArray.lazySet
    10000000    0.05%        1  io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
    10000000    0.05%        1  io.netty.buffer.CompositeByteBuf.isDirect
    10000000    0.05%        1  io.netty.util.concurrent.DefaultPromise.notifyListeners
    10000000    0.05%        1  io.netty.buffer.AbstractByteBuf.writerIndex
