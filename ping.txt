Started [cpu] profiling
--- Execution profile ---
Total samples:         2988
Non-Java:              22 (0.74%)
Unknown (native):      5 (0.17%)
Unknown (Java):        6 (0.20%)
Not walkable (Java):   1 (0.03%)

Frame buffer usage:    0.3121%

--- 22770000000 ns (76.20%), 2277 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.writev0
  [ 1] sun.nio.ch.SocketDispatcher.writev
  [ 2] sun.nio.ch.IOUtil.write
  [ 3] sun.nio.ch.SocketChannelImpl.write
  [ 4] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 5] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 6] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 8] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [11] io.netty.channel.AbstractChannelHandlerContext.flush
  [12] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [13] reactor.netty.channel.ChannelOperationsHandler.drain
  [14] reactor.netty.channel.ChannelOperationsHandler.flush
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [17] io.netty.channel.AbstractChannelHandlerContext.flush
  [18] io.netty.channel.DefaultChannelPipeline.flush
  [19] io.netty.channel.AbstractChannel.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [22] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [23] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [24] io.netty.channel.nio.NioEventLoop.run
  [25] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [26] java.lang.Thread.run

--- 4820000000 ns (16.13%), 482 samples
  [ 0] sun.nio.ch.KQueueArrayWrapper.kevent0
  [ 1] sun.nio.ch.KQueueArrayWrapper.poll
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] io.netty.channel.nio.SelectedSelectionKeySetSelector.select
  [ 6] io.netty.channel.nio.NioEventLoop.select
  [ 7] io.netty.channel.nio.NioEventLoop.run
  [ 8] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [ 9] java.lang.Thread.run

--- 570000000 ns (1.91%), 57 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.read0
  [ 1] sun.nio.ch.SocketDispatcher.read
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.SocketChannelImpl.read
  [ 5] io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes
  [ 6] io.netty.buffer.AbstractByteBuf.writeBytes
  [ 7] io.netty.channel.socket.nio.NioSocketChannel.doReadBytes
  [ 8] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [ 9] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [10] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [11] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [12] io.netty.channel.nio.NioEventLoop.run
  [13] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [14] java.lang.Thread.run

--- 290000000 ns (0.97%), 29 samples
  [ 0] jint_disjoint_arraycopy
  [ 1] java.util.ArrayList.toArray
  [ 2] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 3] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 4] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 5] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 7] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 80000000 ns (0.27%), 8 samples
  [ 0] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 7] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoProcessor.onNext
  [10] io.rsocket.internal.UnicastMonoProcessor.onNext
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [21] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [22] reactor.netty.channel.FluxReceive.drainReceiver
  [23] reactor.netty.channel.FluxReceive.onInboundNext
  [24] reactor.netty.channel.ChannelOperations.onInboundNext
  [25] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [30] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [31] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [32] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [34] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [36] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [40] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [42] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [43] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [44] io.netty.channel.nio.NioEventLoop.run
  [45] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [46] java.lang.Thread.run

--- 40000000 ns (0.13%), 4 samples
  [ 0] reactor.core.publisher.Mono.subscribe
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 2] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 3] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 5] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 6] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 8] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 9] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [10] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [11] reactor.core.publisher.Operators$MonoSubscriber.complete
  [12] reactor.core.publisher.MonoProcessor.onNext
  [13] io.rsocket.internal.UnicastMonoProcessor.onNext
  [14] io.rsocket.RSocketClient.handleFrame
  [15] io.rsocket.RSocketClient.handleIncomingFrames
  [16] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [17] reactor.core.publisher.LambdaSubscriber.onNext
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [20] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [22] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [23] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [24] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [25] reactor.netty.channel.FluxReceive.drainReceiver
  [26] reactor.netty.channel.FluxReceive.onInboundNext
  [27] reactor.netty.channel.ChannelOperations.onInboundNext
  [28] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [32] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [33] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [34] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [35] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [39] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [43] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [44] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [45] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [46] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [47] io.netty.channel.nio.NioEventLoop.run
  [48] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [49] java.lang.Thread.run

--- 40000000 ns (0.13%), 4 samples
  [ 0] java.io.FileOutputStream.writeBytes
  [ 1] java.io.FileOutputStream.write
  [ 2] java.io.BufferedOutputStream.flushBuffer
  [ 3] java.io.BufferedOutputStream.flush
  [ 4] java.io.PrintStream.write
  [ 5] sun.nio.cs.StreamEncoder.writeBytes
  [ 6] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 7] sun.nio.cs.StreamEncoder.flushBuffer
  [ 8] java.io.OutputStreamWriter.flushBuffer
  [ 9] java.io.PrintStream.write
  [10] java.io.PrintStream.print
  [11] java.io.PrintStream.append
  [12] java.io.PrintStream.append
  [13] java.util.Formatter$FormatSpecifier.print
  [14] java.util.Formatter$FormatSpecifier.printFloat
  [15] java.util.Formatter$FormatSpecifier.print
  [16] java.util.Formatter.format
  [17] java.io.PrintStream.format
  [18] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [19] io.rsocket.test.PingClient.lambda$startTracker$0
  [20] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [22] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [23] reactor.core.scheduler.PeriodicWorkerTask.call
  [24] reactor.core.scheduler.PeriodicWorkerTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.runAndReset
  [27] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [28] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 30000000 ns (0.10%), 3 samples
  [ 0] java.util.ArrayList.grow
  [ 1] java.util.ArrayList.ensureExplicitCapacity
  [ 2] java.util.ArrayList.ensureCapacityInternal
  [ 3] java.util.ArrayList.add
  [ 4] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 5] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 6] io.netty.buffer.CompositeByteBuf.addComponents
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 8] io.rsocket.frame.RequestFlyweight.encode
  [ 9] io.rsocket.frame.RequestFlyweight.encode
  [10] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [11] io.rsocket.RSocketClient.handleRequestResponse
  [12] io.rsocket.RSocketClient.requestResponse
  [13] io.rsocket.test.PingClient.lambda$null$2
  [14] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [20] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [22] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [24] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoProcessor.onNext
  [27] io.rsocket.internal.UnicastMonoProcessor.onNext
  [28] io.rsocket.RSocketClient.handleFrame
  [29] io.rsocket.RSocketClient.handleIncomingFrames
  [30] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.netty.channel.FluxReceive.drainReceiver
  [40] reactor.netty.channel.FluxReceive.onInboundNext
  [41] reactor.netty.channel.ChannelOperations.onInboundNext
  [42] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [49] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [57] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [61] io.netty.channel.nio.NioEventLoop.run
  [62] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [63] java.lang.Thread.run

--- 30000000 ns (0.10%), 3 samples
  [ 0] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBufferCount
  [ 1] io.netty.buffer.CompositeByteBuf.nioBufferCount
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBufferCount
  [ 3] io.netty.buffer.CompositeByteBuf.nioBufferCount
  [ 4] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 5] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 7] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 30000000 ns (0.10%), 3 samples
  [ 0] io.netty.buffer.AbstractDerivedByteBuf.<init>
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractByteBuf.slice
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.util.ByteBufPayload.sliceData
  [ 6] io.rsocket.RSocketClient.handleRequestResponse
  [ 7] io.rsocket.RSocketClient.requestResponse
  [ 8] io.rsocket.test.PingClient.lambda$null$2
  [ 9] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [10] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [11] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [12] reactor.core.publisher.FluxRange$RangeSubscription.request
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [15] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [16] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [17] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoProcessor.onNext
  [22] io.rsocket.internal.UnicastMonoProcessor.onNext
  [23] io.rsocket.RSocketClient.handleFrame
  [24] io.rsocket.RSocketClient.handleIncomingFrames
  [25] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [26] reactor.core.publisher.LambdaSubscriber.onNext
  [27] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [31] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [32] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.netty.channel.FluxReceive.drainReceiver
  [35] reactor.netty.channel.FluxReceive.onInboundNext
  [36] reactor.netty.channel.ChannelOperations.onInboundNext
  [37] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [41] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [44] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [48] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [52] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [53] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [56] io.netty.channel.nio.NioEventLoop.run
  [57] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [58] java.lang.Thread.run

--- 30000000 ns (0.10%), 3 samples
  [ 0] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 1] reactor.netty.channel.ChannelOperationsHandler.drain
  [ 2] reactor.netty.channel.ChannelOperationsHandler.flush
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 5] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 6] io.netty.channel.DefaultChannelPipeline.flush
  [ 7] io.netty.channel.AbstractChannel.flush
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [10] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [11] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [12] io.netty.channel.nio.NioEventLoop.run
  [13] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [14] java.lang.Thread.run

--- 30000000 ns (0.10%), 3 samples
  [ 0] reactor.core.publisher.Operators.validate
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 5] reactor.core.publisher.MonoProcessor.subscribe
  [ 6] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 7] reactor.core.publisher.MonoPeek.subscribe
  [ 8] reactor.core.publisher.MonoDoFinally.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [17] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [20] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoProcessor.onNext
  [24] io.rsocket.internal.UnicastMonoProcessor.onNext
  [25] io.rsocket.RSocketClient.handleFrame
  [26] io.rsocket.RSocketClient.handleIncomingFrames
  [27] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [36] reactor.netty.channel.FluxReceive.drainReceiver
  [37] reactor.netty.channel.FluxReceive.onInboundNext
  [38] reactor.netty.channel.ChannelOperations.onInboundNext
  [39] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [46] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [50] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [54] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [58] io.netty.channel.nio.NioEventLoop.run
  [59] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [60] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffers
  [ 2] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 3] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 4] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 5] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 7] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [12] io.netty.channel.AbstractChannelHandlerContext.flush
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.io.FileOutputStream.writeBytes
  [ 1] java.io.FileOutputStream.write
  [ 2] java.io.BufferedOutputStream.flushBuffer
  [ 3] java.io.BufferedOutputStream.flush
  [ 4] java.io.PrintStream.write
  [ 5] sun.nio.cs.StreamEncoder.writeBytes
  [ 6] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 7] sun.nio.cs.StreamEncoder.flushBuffer
  [ 8] java.io.OutputStreamWriter.flushBuffer
  [ 9] java.io.PrintStream.write
  [10] java.io.PrintStream.print
  [11] java.io.PrintStream.append
  [12] java.io.PrintStream.append
  [13] java.util.Formatter$FormatSpecifier.print
  [14] java.util.Formatter$FormatSpecifier.printString
  [15] java.util.Formatter$FormatSpecifier.print
  [16] java.util.Formatter.format
  [17] java.io.PrintStream.format
  [18] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [19] io.rsocket.test.PingClient.lambda$startTracker$0
  [20] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [22] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [23] reactor.core.scheduler.PeriodicWorkerTask.call
  [24] reactor.core.scheduler.PeriodicWorkerTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.runAndReset
  [27] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [28] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] org.HdrHistogram.AbstractHistogram.updateMinNonZeroValue
  [ 1] org.HdrHistogram.AbstractHistogram.updateMinAndMax
  [ 2] org.HdrHistogram.AbstractHistogram.recordSingleValue
  [ 3] org.HdrHistogram.AbstractHistogram.recordValue
  [ 4] org.HdrHistogram.Recorder.recordValue
  [ 5] io.rsocket.test.PingClient.lambda$null$1
  [ 6] io.rsocket.test.PingClient$$Lambda$84.332713534.accept
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 8] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 9] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [10] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [11] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [12] reactor.core.publisher.Operators$MonoSubscriber.complete
  [13] reactor.core.publisher.MonoProcessor.onNext
  [14] io.rsocket.internal.UnicastMonoProcessor.onNext
  [15] io.rsocket.RSocketClient.handleFrame
  [16] io.rsocket.RSocketClient.handleIncomingFrames
  [17] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [18] reactor.core.publisher.LambdaSubscriber.onNext
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [20] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [23] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [24] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [25] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [26] reactor.netty.channel.FluxReceive.drainReceiver
  [27] reactor.netty.channel.FluxReceive.onInboundNext
  [28] reactor.netty.channel.ChannelOperations.onInboundNext
  [29] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [33] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [34] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [35] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [36] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [40] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [44] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [45] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [46] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [47] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [48] io.netty.channel.nio.NioEventLoop.run
  [49] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [50] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] org.HdrHistogram.AbstractHistogramIterator.next
  [ 1] org.HdrHistogram.PercentileIterator.next
  [ 2] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [ 3] io.rsocket.test.PingClient.lambda$startTracker$0
  [ 4] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 6] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [ 7] reactor.core.scheduler.PeriodicWorkerTask.call
  [ 8] reactor.core.scheduler.PeriodicWorkerTask.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.runAndReset
  [11] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [12] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.handler.codec.CodecOutputList.insert
  [ 1] io.netty.handler.codec.CodecOutputList.add
  [ 2] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [ 3] io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection
  [ 4] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [ 5] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 8] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [13] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [14] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [15] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [16] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [17] io.netty.channel.nio.NioEventLoop.run
  [18] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [19] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.CompositeByteBuf.toComponentIndex
  [ 1] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffers
  [ 3] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 4] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 5] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 6] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 8] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 9] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [10] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [13] io.netty.channel.AbstractChannelHandlerContext.flush
  [14] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [15] reactor.netty.channel.ChannelOperationsHandler.drain
  [16] reactor.netty.channel.ChannelOperationsHandler.flush
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [19] io.netty.channel.AbstractChannelHandlerContext.flush
  [20] io.netty.channel.DefaultChannelPipeline.flush
  [21] io.netty.channel.AbstractChannel.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [24] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [25] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [26] io.netty.channel.nio.NioEventLoop.run
  [27] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [28] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.io.FileOutputStream.writeBytes
  [ 1] java.io.FileOutputStream.write
  [ 2] java.io.BufferedOutputStream.flushBuffer
  [ 3] java.io.BufferedOutputStream.flush
  [ 4] java.io.PrintStream.write
  [ 5] sun.nio.cs.StreamEncoder.writeBytes
  [ 6] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 7] sun.nio.cs.StreamEncoder.flushBuffer
  [ 8] java.io.OutputStreamWriter.flushBuffer
  [ 9] java.io.PrintStream.write
  [10] java.io.PrintStream.print
  [11] java.io.PrintStream.append
  [12] java.io.PrintStream.append
  [13] java.util.Formatter$FixedString.print
  [14] java.util.Formatter.format
  [15] java.io.PrintStream.format
  [16] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [17] io.rsocket.test.PingClient.lambda$startTracker$0
  [18] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [20] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [21] reactor.core.scheduler.PeriodicWorkerTask.call
  [22] reactor.core.scheduler.PeriodicWorkerTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.runAndReset
  [25] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [26] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] sun.nio.ch.SocketChannelImpl.write
  [ 1] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 2] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 3] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 5] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 9] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [10] reactor.netty.channel.ChannelOperationsHandler.drain
  [11] reactor.netty.channel.ChannelOperationsHandler.flush
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [14] io.netty.channel.AbstractChannelHandlerContext.flush
  [15] io.netty.channel.DefaultChannelPipeline.flush
  [16] io.netty.channel.AbstractChannel.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [19] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [20] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [21] io.netty.channel.nio.NioEventLoop.run
  [22] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.util.Recycler.get
  [ 1] io.netty.channel.ChannelOutboundBuffer$Entry.newInstance
  [ 2] io.netty.channel.ChannelOutboundBuffer.addMessage
  [ 3] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 4] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 5] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 7] io.netty.channel.AbstractChannelHandlerContext.write
  [ 8] io.netty.channel.AbstractChannelHandlerContext.write
  [ 9] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [10] reactor.netty.channel.ChannelOperationsHandler.drain
  [11] reactor.netty.channel.ChannelOperationsHandler.flush
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [14] io.netty.channel.AbstractChannelHandlerContext.flush
  [15] io.netty.channel.DefaultChannelPipeline.flush
  [16] io.netty.channel.AbstractChannel.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [18] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [19] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [20] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [21] io.netty.channel.nio.NioEventLoop.run
  [22] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [23] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.lang.ThreadLocal.get
  [ 1] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 2] io.netty.util.internal.InternalThreadLocalMap.get
  [ 3] io.netty.util.concurrent.FastThreadLocal.get
  [ 4] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 7] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 8] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocate
  [10] io.netty.buffer.PoolThreadCache.allocateTiny
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PoolArena.allocate
  [13] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [16] io.netty.buffer.AbstractByteBufAllocator.buffer
  [17] io.rsocket.frame.FrameHeaderFlyweight.encode
  [18] io.rsocket.frame.RequestFlyweight.encode
  [19] io.rsocket.frame.RequestFlyweight.encode
  [20] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [21] io.rsocket.RSocketClient.handleRequestResponse
  [22] io.rsocket.RSocketClient.requestResponse
  [23] io.rsocket.test.PingClient.lambda$null$2
  [24] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [27] reactor.core.publisher.FluxRange$RangeSubscription.request
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [29] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [30] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [31] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [32] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [34] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [35] reactor.core.publisher.Operators$MonoSubscriber.complete
  [36] reactor.core.publisher.MonoProcessor.onNext
  [37] io.rsocket.internal.UnicastMonoProcessor.onNext
  [38] io.rsocket.RSocketClient.handleFrame
  [39] io.rsocket.RSocketClient.handleIncomingFrames
  [40] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [48] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [49] reactor.netty.channel.FluxReceive.drainReceiver
  [50] reactor.netty.channel.FluxReceive.onInboundNext
  [51] reactor.netty.channel.ChannelOperations.onInboundNext
  [52] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [56] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [57] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [58] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [59] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [63] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [64] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [65] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [66] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [67] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [68] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [69] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [70] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [71] io.netty.channel.nio.NioEventLoop.run
  [72] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [73] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.channel.ChannelOutboundBuffer$Entry.newInstance
  [ 1] io.netty.channel.ChannelOutboundBuffer.addMessage
  [ 2] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 3] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 5] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 6] io.netty.channel.AbstractChannelHandlerContext.write
  [ 7] io.netty.channel.AbstractChannelHandlerContext.write
  [ 8] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 9] reactor.netty.channel.ChannelOperationsHandler.drain
  [10] reactor.netty.channel.ChannelOperationsHandler.flush
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [13] io.netty.channel.AbstractChannelHandlerContext.flush
  [14] io.netty.channel.DefaultChannelPipeline.flush
  [15] io.netty.channel.AbstractChannel.flush
  [16] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [18] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [19] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [20] io.netty.channel.nio.NioEventLoop.run
  [21] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [22] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractByteBuf.slice
  [ 1] io.netty.buffer.AbstractByteBuf.slice
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 6] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 7] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [12] reactor.core.publisher.StrictSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainFused
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.handleRequestResponse
  [17] io.rsocket.RSocketClient.requestResponse
  [18] io.rsocket.test.PingClient.lambda$null$2
  [19] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [21] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [22] reactor.core.publisher.FluxRange$RangeSubscription.request
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [25] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [27] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [29] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoProcessor.onNext
  [32] io.rsocket.internal.UnicastMonoProcessor.onNext
  [33] io.rsocket.RSocketClient.handleFrame
  [34] io.rsocket.RSocketClient.handleIncomingFrames
  [35] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [36] reactor.core.publisher.LambdaSubscriber.onNext
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [41] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [42] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [43] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [44] reactor.netty.channel.FluxReceive.drainReceiver
  [45] reactor.netty.channel.FluxReceive.onInboundNext
  [46] reactor.netty.channel.ChannelOperations.onInboundNext
  [47] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [51] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [52] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [53] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [54] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [58] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [62] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [63] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [64] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [65] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [66] io.netty.channel.nio.NioEventLoop.run
  [67] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [68] java.lang.Thread.run

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 1] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 2] reactor.core.publisher.StrictSubscriber.onNext
  [ 3] io.rsocket.internal.UnboundedProcessor.drainFused
  [ 4] io.rsocket.internal.UnboundedProcessor.drain
  [ 5] io.rsocket.internal.UnboundedProcessor.onNext
  [ 6] io.rsocket.RSocketClient.handleRequestResponse
  [ 7] io.rsocket.RSocketClient.requestResponse
  [ 8] io.rsocket.test.PingClient.lambda$null$2
  [ 9] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [10] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [11] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [12] reactor.core.publisher.FluxRange$RangeSubscription.request
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [15] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [16] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [17] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoProcessor.onNext
  [22] io.rsocket.internal.UnicastMonoProcessor.onNext
  [23] io.rsocket.RSocketClient.handleFrame
  [24] io.rsocket.RSocketClient.handleIncomingFrames
  [25] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [26] reactor.core.publisher.LambdaSubscriber.onNext
  [27] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [31] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [32] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.netty.channel.FluxReceive.drainReceiver
  [35] reactor.netty.channel.FluxReceive.onInboundNext
  [36] reactor.netty.channel.ChannelOperations.onInboundNext
  [37] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [41] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [44] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [48] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [52] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [53] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [56] io.netty.channel.nio.NioEventLoop.run
  [57] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [58] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.ArrayList.grow
  [ 1] java.util.ArrayList.ensureExplicitCapacity
  [ 2] java.util.ArrayList.ensureCapacityInternal
  [ 3] java.util.ArrayList.add
  [ 4] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 5] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffers
  [ 6] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 7] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 8] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 9] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [10] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [11] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [12] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [13] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [18] reactor.netty.channel.ChannelOperationsHandler.drain
  [19] reactor.netty.channel.ChannelOperationsHandler.flush
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [22] io.netty.channel.AbstractChannelHandlerContext.flush
  [23] io.netty.channel.DefaultChannelPipeline.flush
  [24] io.netty.channel.AbstractChannel.flush
  [25] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [26] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [27] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [28] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [29] io.netty.channel.nio.NioEventLoop.run
  [30] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 1] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 2] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 3] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 4] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 5] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [ 6] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 7] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [10] reactor.core.publisher.StrictSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainFused
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.handleRequestResponse
  [15] io.rsocket.RSocketClient.requestResponse
  [16] io.rsocket.test.PingClient.lambda$null$2
  [17] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [19] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [20] reactor.core.publisher.FluxRange$RangeSubscription.request
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [23] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [24] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [25] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [27] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [28] reactor.core.publisher.Operators$MonoSubscriber.complete
  [29] reactor.core.publisher.MonoProcessor.onNext
  [30] io.rsocket.internal.UnicastMonoProcessor.onNext
  [31] io.rsocket.RSocketClient.handleFrame
  [32] io.rsocket.RSocketClient.handleIncomingFrames
  [33] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [34] reactor.core.publisher.LambdaSubscriber.onNext
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [37] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [39] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [40] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [41] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [42] reactor.netty.channel.FluxReceive.drainReceiver
  [43] reactor.netty.channel.FluxReceive.onInboundNext
  [44] reactor.netty.channel.ChannelOperations.onInboundNext
  [45] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [50] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [51] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [52] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [56] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [60] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [61] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [62] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [63] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [64] io.netty.channel.nio.NioEventLoop.run
  [65] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [66] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.UnsafeByteBufUtil.getInt
  [ 1] io.netty.buffer.PooledUnsafeDirectByteBuf._getInt
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf._getInt
  [ 3] io.netty.buffer.AbstractByteBuf.readInt
  [ 4] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 5] io.rsocket.RSocketClient.handleIncomingFrames
  [ 6] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [14] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [15] reactor.netty.channel.FluxReceive.drainReceiver
  [16] reactor.netty.channel.FluxReceive.onInboundNext
  [17] reactor.netty.channel.ChannelOperations.onInboundNext
  [18] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [25] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [33] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [37] io.netty.channel.nio.NioEventLoop.run
  [38] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.lang.ThreadLocal.get
  [ 1] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 2] io.netty.util.internal.InternalThreadLocalMap.get
  [ 3] io.netty.util.concurrent.FastThreadLocal.get
  [ 4] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 5] io.netty.buffer.PoolChunk.initBuf
  [ 6] io.netty.buffer.PoolChunkList.allocate
  [ 7] io.netty.buffer.PoolArena.allocateNormal
  [ 8] io.netty.buffer.PoolArena.allocate
  [ 9] io.netty.buffer.PoolArena.allocate
  [10] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [11] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [12] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.ioBuffer
  [14] io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate
  [15] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [16] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [17] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [18] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [19] io.netty.channel.nio.NioEventLoop.run
  [20] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [21] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.MonoProcessor.onNext
  [ 1] io.rsocket.internal.UnicastMonoProcessor.onNext
  [ 2] io.rsocket.RSocketClient.handleFrame
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [12] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [13] reactor.netty.channel.FluxReceive.drainReceiver
  [14] reactor.netty.channel.FluxReceive.onInboundNext
  [15] reactor.netty.channel.ChannelOperations.onInboundNext
  [16] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [23] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [31] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [35] io.netty.channel.nio.NioEventLoop.run
  [36] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] sun.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 5] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.slice
  [ 1] io.netty.buffer.AbstractByteBuf.slice
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestFlyweight.encode
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 9] io.rsocket.RSocketClient.handleRequestResponse
  [10] io.rsocket.RSocketClient.requestResponse
  [11] io.rsocket.test.PingClient.lambda$null$2
  [12] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [14] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [15] reactor.core.publisher.FluxRange$RangeSubscription.request
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [18] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [22] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoProcessor.onNext
  [25] io.rsocket.internal.UnicastMonoProcessor.onNext
  [26] io.rsocket.RSocketClient.handleFrame
  [27] io.rsocket.RSocketClient.handleIncomingFrames
  [28] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [29] reactor.core.publisher.LambdaSubscriber.onNext
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [34] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [35] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.netty.channel.FluxReceive.drainReceiver
  [38] reactor.netty.channel.FluxReceive.onInboundNext
  [39] reactor.netty.channel.ChannelOperations.onInboundNext
  [40] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [47] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [51] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [55] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [59] io.netty.channel.nio.NioEventLoop.run
  [60] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [61] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.channel.nio.AbstractNioChannel.doBeginRead
  [ 1] io.netty.channel.AbstractChannel$AbstractUnsafe.beginRead
  [ 2] io.netty.channel.DefaultChannelPipeline$HeadContext.read
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 4] io.netty.channel.AbstractChannelHandlerContext.read
  [ 5] io.netty.channel.ChannelDuplexHandler.read
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 7] io.netty.channel.AbstractChannelHandlerContext.read
  [ 8] io.netty.channel.DefaultChannelPipeline.read
  [ 9] io.netty.channel.AbstractChannel.read
  [10] reactor.netty.channel.FluxReceive.drainReceiver
  [11] reactor.netty.channel.FluxReceive.onInboundNext
  [12] reactor.netty.channel.ChannelOperations.onInboundNext
  [13] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [17] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [18] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [19] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [20] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [24] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [28] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [29] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [30] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [31] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [32] io.netty.channel.nio.NioEventLoop.run
  [33] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [34] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.readableBytes
  [ 1] io.netty.buffer.AbstractByteBuf.slice
  [ 2] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 4] io.netty.buffer.CompositeByteBuf.addComponents
  [ 5] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 6] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 7] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [ 8] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 9] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [12] reactor.core.publisher.StrictSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainFused
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.handleRequestResponse
  [17] io.rsocket.RSocketClient.requestResponse
  [18] io.rsocket.test.PingClient.lambda$null$2
  [19] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [21] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [22] reactor.core.publisher.FluxRange$RangeSubscription.request
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [25] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [27] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [29] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoProcessor.onNext
  [32] io.rsocket.internal.UnicastMonoProcessor.onNext
  [33] io.rsocket.RSocketClient.handleFrame
  [34] io.rsocket.RSocketClient.handleIncomingFrames
  [35] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [36] reactor.core.publisher.LambdaSubscriber.onNext
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [41] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [42] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [43] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [44] reactor.netty.channel.FluxReceive.drainReceiver
  [45] reactor.netty.channel.FluxReceive.onInboundNext
  [46] reactor.netty.channel.ChannelOperations.onInboundNext
  [47] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [51] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [52] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [53] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [54] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [58] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [62] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [63] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [64] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [65] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [66] io.netty.channel.nio.NioEventLoop.run
  [67] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [68] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.handler.codec.LengthFieldBasedFrameDecoder.getUnadjustedFrameLength
  [ 1] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [ 2] io.netty.handler.codec.LengthFieldBasedFrameDecoder.decode
  [ 3] io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection
  [ 4] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [ 5] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 8] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [ 9] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [13] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [14] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [15] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [16] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [17] io.netty.channel.nio.NioEventLoop.run
  [18] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.channel.ChannelOutboundBuffer.incrementPendingOutboundBytes
  [ 1] io.netty.channel.ChannelOutboundBuffer.addMessage
  [ 2] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 3] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 4] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 5] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 6] io.netty.channel.AbstractChannelHandlerContext.write
  [ 7] io.netty.channel.AbstractChannelHandlerContext.write
  [ 8] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 9] reactor.netty.channel.ChannelOperationsHandler.drain
  [10] reactor.netty.channel.ChannelOperationsHandler.flush
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [13] io.netty.channel.AbstractChannelHandlerContext.flush
  [14] io.netty.channel.DefaultChannelPipeline.flush
  [15] io.netty.channel.AbstractChannel.flush
  [16] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [18] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [19] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [20] io.netty.channel.nio.NioEventLoop.run
  [21] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.ensureWritable0
  [ 1] io.netty.buffer.AbstractByteBuf.writeByte
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.handleRequestResponse
  [ 8] io.rsocket.RSocketClient.requestResponse
  [ 9] io.rsocket.test.PingClient.lambda$null$2
  [10] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [16] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [18] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoProcessor.onNext
  [23] io.rsocket.internal.UnicastMonoProcessor.onNext
  [24] io.rsocket.RSocketClient.handleFrame
  [25] io.rsocket.RSocketClient.handleIncomingFrames
  [26] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.netty.channel.FluxReceive.drainReceiver
  [36] reactor.netty.channel.FluxReceive.onInboundNext
  [37] reactor.netty.channel.ChannelOperations.onInboundNext
  [38] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [45] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [53] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [57] io.netty.channel.nio.NioEventLoop.run
  [58] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [59] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.channel.DefaultChannelPipeline.write
  [ 1] io.netty.channel.AbstractChannel.write
  [ 2] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [ 3] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 4] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 5] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 6] reactor.core.publisher.StrictSubscriber.onNext
  [ 7] io.rsocket.internal.UnboundedProcessor.drainFused
  [ 8] io.rsocket.internal.UnboundedProcessor.drain
  [ 9] io.rsocket.internal.UnboundedProcessor.onNext
  [10] io.rsocket.RSocketClient.handleRequestResponse
  [11] io.rsocket.RSocketClient.requestResponse
  [12] io.rsocket.test.PingClient.lambda$null$2
  [13] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [15] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [16] reactor.core.publisher.FluxRange$RangeSubscription.request
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [19] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [20] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [22] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [23] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoProcessor.onNext
  [26] io.rsocket.internal.UnicastMonoProcessor.onNext
  [27] io.rsocket.RSocketClient.handleFrame
  [28] io.rsocket.RSocketClient.handleIncomingFrames
  [29] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.netty.channel.FluxReceive.drainReceiver
  [39] reactor.netty.channel.FluxReceive.onInboundNext
  [40] reactor.netty.channel.ChannelOperations.onInboundNext
  [41] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [50] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [54] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [58] io.netty.channel.nio.NioEventLoop.run
  [59] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [60] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.lang.ThreadLocal.get
  [ 1] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 2] io.netty.util.internal.InternalThreadLocalMap.get
  [ 3] io.netty.util.concurrent.FastThreadLocal.get
  [ 4] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 7] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 8] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocate
  [10] io.netty.buffer.PoolThreadCache.allocateTiny
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PoolArena.allocate
  [13] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [16] io.netty.buffer.AbstractByteBufAllocator.buffer
  [17] io.rsocket.frame.FrameLengthFlyweight.encode
  [18] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [19] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [24] reactor.core.publisher.StrictSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainFused
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketClient.handleRequestResponse
  [29] io.rsocket.RSocketClient.requestResponse
  [30] io.rsocket.test.PingClient.lambda$null$2
  [31] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [32] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [33] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [34] reactor.core.publisher.FluxRange$RangeSubscription.request
  [35] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [37] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [38] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [39] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [40] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [41] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoProcessor.onNext
  [44] io.rsocket.internal.UnicastMonoProcessor.onNext
  [45] io.rsocket.RSocketClient.handleFrame
  [46] io.rsocket.RSocketClient.handleIncomingFrames
  [47] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [48] reactor.core.publisher.LambdaSubscriber.onNext
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [53] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [54] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [55] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [56] reactor.netty.channel.FluxReceive.drainReceiver
  [57] reactor.netty.channel.FluxReceive.onInboundNext
  [58] reactor.netty.channel.ChannelOperations.onInboundNext
  [59] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [60] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [63] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [64] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [65] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [66] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [67] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [68] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [69] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [70] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [71] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [72] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [73] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [74] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [75] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [76] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [77] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [78] io.netty.channel.nio.NioEventLoop.run
  [79] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [80] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.Arrays.fill
  [ 1] io.netty.channel.nio.SelectedSelectionKeySet.reset
  [ 2] io.netty.channel.nio.SelectedSelectionKeySet.reset
  [ 3] io.netty.channel.nio.SelectedSelectionKeySetSelector.select
  [ 4] io.netty.channel.nio.NioEventLoop.select
  [ 5] io.netty.channel.nio.NioEventLoop.run
  [ 6] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [ 7] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 1] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 2] reactor.core.publisher.MonoProcessor.onNext
  [ 3] io.rsocket.internal.UnicastMonoProcessor.onNext
  [ 4] io.rsocket.RSocketClient.handleFrame
  [ 5] io.rsocket.RSocketClient.handleIncomingFrames
  [ 6] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [14] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [15] reactor.netty.channel.FluxReceive.drainReceiver
  [16] reactor.netty.channel.FluxReceive.onInboundNext
  [17] reactor.netty.channel.ChannelOperations.onInboundNext
  [18] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [25] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [33] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [37] io.netty.channel.nio.NioEventLoop.run
  [38] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] sun.nio.ch.SocketDispatcher.writev
  [ 1] sun.nio.ch.IOUtil.write
  [ 2] sun.nio.ch.SocketChannelImpl.write
  [ 3] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 5] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 7] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [10] io.netty.channel.AbstractChannelHandlerContext.flush
  [11] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [12] reactor.netty.channel.ChannelOperationsHandler.drain
  [13] reactor.netty.channel.ChannelOperationsHandler.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] io.netty.channel.DefaultChannelPipeline.flush
  [18] io.netty.channel.AbstractChannel.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [21] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [22] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [23] io.netty.channel.nio.NioEventLoop.run
  [24] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [ 1] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 2] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [ 3] reactor.core.publisher.StrictSubscriber.onNext
  [ 4] io.rsocket.internal.UnboundedProcessor.drainFused
  [ 5] io.rsocket.internal.UnboundedProcessor.drain
  [ 6] io.rsocket.internal.UnboundedProcessor.onNext
  [ 7] io.rsocket.RSocketClient.handleRequestResponse
  [ 8] io.rsocket.RSocketClient.requestResponse
  [ 9] io.rsocket.test.PingClient.lambda$null$2
  [10] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [16] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [18] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoProcessor.onNext
  [23] io.rsocket.internal.UnicastMonoProcessor.onNext
  [24] io.rsocket.RSocketClient.handleFrame
  [25] io.rsocket.RSocketClient.handleIncomingFrames
  [26] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.netty.channel.FluxReceive.drainReceiver
  [36] reactor.netty.channel.FluxReceive.onInboundNext
  [37] reactor.netty.channel.ChannelOperations.onInboundNext
  [38] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [45] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [53] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [57] io.netty.channel.nio.NioEventLoop.run
  [58] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [59] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.AbstractByteBuf.order
  [ 1] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 2] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 3] io.netty.buffer.CompositeByteBuf.addComponents
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.handleRequestResponse
  [ 9] io.rsocket.RSocketClient.requestResponse
  [10] io.rsocket.test.PingClient.lambda$null$2
  [11] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [17] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [20] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoProcessor.onNext
  [24] io.rsocket.internal.UnicastMonoProcessor.onNext
  [25] io.rsocket.RSocketClient.handleFrame
  [26] io.rsocket.RSocketClient.handleIncomingFrames
  [27] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [36] reactor.netty.channel.FluxReceive.drainReceiver
  [37] reactor.netty.channel.FluxReceive.onInboundNext
  [38] reactor.netty.channel.ChannelOperations.onInboundNext
  [39] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [46] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [50] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [54] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [58] io.netty.channel.nio.NioEventLoop.run
  [59] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [60] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.ArrayList.get
  [ 1] io.netty.buffer.CompositeByteBuf.isDirect
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.isDirect
  [ 3] io.netty.buffer.CompositeByteBuf.isDirect
  [ 4] io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage
  [ 5] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 6] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 7] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [ 9] io.netty.channel.AbstractChannelHandlerContext.write
  [10] io.netty.channel.AbstractChannelHandlerContext.write
  [11] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [12] reactor.netty.channel.ChannelOperationsHandler.drain
  [13] reactor.netty.channel.ChannelOperationsHandler.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] io.netty.channel.DefaultChannelPipeline.flush
  [18] io.netty.channel.AbstractChannel.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [21] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [22] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [23] io.netty.channel.nio.NioEventLoop.run
  [24] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.util.ResourceLeakDetector.track
  [ 1] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 2] io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer
  [ 3] io.netty.buffer.AbstractByteBufAllocator.compositeBuffer
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.handleRequestResponse
  [ 9] io.rsocket.RSocketClient.requestResponse
  [10] io.rsocket.test.PingClient.lambda$null$2
  [11] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [17] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [19] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [20] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoProcessor.onNext
  [24] io.rsocket.internal.UnicastMonoProcessor.onNext
  [25] io.rsocket.RSocketClient.handleFrame
  [26] io.rsocket.RSocketClient.handleIncomingFrames
  [27] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [36] reactor.netty.channel.FluxReceive.drainReceiver
  [37] reactor.netty.channel.FluxReceive.onInboundNext
  [38] reactor.netty.channel.ChannelOperations.onInboundNext
  [39] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [46] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [50] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [54] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [58] io.netty.channel.nio.NioEventLoop.run
  [59] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [60] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.rsocket.RSocketClient$ReceiverHolder.access$900
  [ 1] io.rsocket.RSocketClient.handleFrame
  [ 2] io.rsocket.RSocketClient.handleIncomingFrames
  [ 3] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 4] reactor.core.publisher.LambdaSubscriber.onNext
  [ 5] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [10] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [11] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [12] reactor.netty.channel.FluxReceive.drainReceiver
  [13] reactor.netty.channel.FluxReceive.onInboundNext
  [14] reactor.netty.channel.ChannelOperations.onInboundNext
  [15] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [19] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [22] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [26] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [30] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [31] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [34] io.netty.channel.nio.NioEventLoop.run
  [35] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [36] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf._getInt
  [ 1] io.netty.buffer.UnpooledSlicedByteBuf._getInt
  [ 2] io.netty.buffer.AbstractByteBuf.readInt
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 4] io.rsocket.RSocketClient.handleIncomingFrames
  [ 5] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 6] reactor.core.publisher.LambdaSubscriber.onNext
  [ 7] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [10] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [11] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [12] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [13] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoProcessor.onNext
  [16] io.rsocket.internal.UnicastMonoProcessor.onNext
  [17] io.rsocket.RSocketClient.handleFrame
  [18] io.rsocket.RSocketClient.handleIncomingFrames
  [19] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [20] reactor.core.publisher.LambdaSubscriber.onNext
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [25] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [26] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [27] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [28] reactor.netty.channel.FluxReceive.drainReceiver
  [29] reactor.netty.channel.FluxReceive.onInboundNext
  [30] reactor.netty.channel.ChannelOperations.onInboundNext
  [31] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [34] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [35] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [36] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [37] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [38] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [46] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [47] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [48] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [49] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [50] io.netty.channel.nio.NioEventLoop.run
  [51] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [52] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.lang.ThreadLocal.get
  [ 1] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 2] io.netty.util.internal.InternalThreadLocalMap.get
  [ 3] io.netty.util.concurrent.FastThreadLocal.get
  [ 4] io.netty.util.Recycler.get
  [ 5] io.netty.channel.ChannelOutboundBuffer$Entry.newInstance
  [ 6] io.netty.channel.ChannelOutboundBuffer.addMessage
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.write
  [ 8] io.netty.channel.DefaultChannelPipeline$HeadContext.write
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeWrite0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeWrite
  [11] io.netty.channel.AbstractChannelHandlerContext.write
  [12] io.netty.channel.AbstractChannelHandlerContext.write
  [13] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [14] reactor.netty.channel.ChannelOperationsHandler.drain
  [15] reactor.netty.channel.ChannelOperationsHandler.flush
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [18] io.netty.channel.AbstractChannelHandlerContext.flush
  [19] io.netty.channel.DefaultChannelPipeline.flush
  [20] io.netty.channel.AbstractChannel.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [22] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [23] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [24] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [25] io.netty.channel.nio.NioEventLoop.run
  [26] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [27] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 1] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 7] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 8] io.rsocket.frame.RequestFlyweight.encode
  [ 9] io.rsocket.frame.RequestFlyweight.encode
  [10] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [11] io.rsocket.RSocketClient.handleRequestResponse
  [12] io.rsocket.RSocketClient.requestResponse
  [13] io.rsocket.test.PingClient.lambda$null$2
  [14] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [20] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [22] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [24] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoProcessor.onNext
  [27] io.rsocket.internal.UnicastMonoProcessor.onNext
  [28] io.rsocket.RSocketClient.handleFrame
  [29] io.rsocket.RSocketClient.handleIncomingFrames
  [30] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.netty.channel.FluxReceive.drainReceiver
  [40] reactor.netty.channel.FluxReceive.onInboundNext
  [41] reactor.netty.channel.ChannelOperations.onInboundNext
  [42] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [49] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [57] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [61] io.netty.channel.nio.NioEventLoop.run
  [62] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [63] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] org.HdrHistogram.AbstractHistogramIterator.next
  [ 1] org.HdrHistogram.RecordedValuesIterator.next
  [ 2] org.HdrHistogram.AbstractHistogram.getMean
  [ 3] org.HdrHistogram.AbstractHistogram.getStdDeviation
  [ 4] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [ 5] io.rsocket.test.PingClient.lambda$startTracker$0
  [ 6] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [ 7] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 8] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [ 9] reactor.core.scheduler.PeriodicWorkerTask.call
  [10] reactor.core.scheduler.PeriodicWorkerTask.run
  [11] java.util.concurrent.Executors$RunnableAdapter.call
  [12] java.util.concurrent.FutureTask.runAndReset
  [13] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [14] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 3] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 4] reactor.core.publisher.MonoProcessor.onNext
  [ 5] io.rsocket.internal.UnicastMonoProcessor.onNext
  [ 6] io.rsocket.RSocketClient.handleFrame
  [ 7] io.rsocket.RSocketClient.handleIncomingFrames
  [ 8] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [16] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [17] reactor.netty.channel.FluxReceive.drainReceiver
  [18] reactor.netty.channel.FluxReceive.onInboundNext
  [19] reactor.netty.channel.ChannelOperations.onInboundNext
  [20] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [25] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [26] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [27] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [31] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [34] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [35] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [37] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [38] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [39] io.netty.channel.nio.NioEventLoop.run
  [40] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [41] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.netty.channel.ChannelOperations.get
  [ 1] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [ 2] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [ 4] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [ 5] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [ 6] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [ 7] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [ 8] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [12] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [15] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [16] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [17] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [18] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [19] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [20] io.netty.channel.nio.NioEventLoop.run
  [21] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 1] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 2] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 3] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 4] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 5] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 6] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 7] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 8] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [10] io.netty.channel.AbstractChannelHandlerContext.flush
  [11] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [12] reactor.netty.channel.ChannelOperationsHandler.drain
  [13] reactor.netty.channel.ChannelOperationsHandler.flush
  [14] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [16] io.netty.channel.AbstractChannelHandlerContext.flush
  [17] io.netty.channel.DefaultChannelPipeline.flush
  [18] io.netty.channel.AbstractChannel.flush
  [19] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [21] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [22] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [23] io.netty.channel.nio.NioEventLoop.run
  [24] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [25] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.FlatMapTracker.remove
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 7] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoProcessor.onNext
  [10] io.rsocket.internal.UnicastMonoProcessor.onNext
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [21] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [22] reactor.netty.channel.FluxReceive.drainReceiver
  [23] reactor.netty.channel.FluxReceive.onInboundNext
  [24] reactor.netty.channel.ChannelOperations.onInboundNext
  [25] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [30] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [31] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [32] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [34] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [36] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [37] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [38] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [39] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [40] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [42] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [43] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [44] io.netty.channel.nio.NioEventLoop.run
  [45] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [46] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 1] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 2] io.rsocket.RSocketClient.handleFrame
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [12] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [13] reactor.netty.channel.FluxReceive.drainReceiver
  [14] reactor.netty.channel.FluxReceive.onInboundNext
  [15] reactor.netty.channel.ChannelOperations.onInboundNext
  [16] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [20] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [21] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [23] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [29] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [30] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [31] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [32] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [33] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [35] io.netty.channel.nio.NioEventLoop.run
  [36] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [37] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.Operators.setOnce
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapInner.onSubscribe
  [ 2] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 3] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoProcessor.subscribe
  [ 7] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 8] reactor.core.publisher.MonoPeek.subscribe
  [ 9] reactor.core.publisher.MonoDoFinally.subscribe
  [10] reactor.core.publisher.MonoPeek.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [14] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [15] reactor.core.publisher.FluxRange$RangeSubscription.request
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [18] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [22] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoProcessor.onNext
  [25] io.rsocket.internal.UnicastMonoProcessor.onNext
  [26] io.rsocket.RSocketClient.handleFrame
  [27] io.rsocket.RSocketClient.handleIncomingFrames
  [28] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [29] reactor.core.publisher.LambdaSubscriber.onNext
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [34] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [35] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [36] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [37] reactor.netty.channel.FluxReceive.drainReceiver
  [38] reactor.netty.channel.FluxReceive.onInboundNext
  [39] reactor.netty.channel.ChannelOperations.onInboundNext
  [40] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [45] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [47] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [49] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [51] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [53] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [54] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [55] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [57] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [59] io.netty.channel.nio.NioEventLoop.run
  [60] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [61] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.slice
  [ 6] io.netty.buffer.PooledUnsafeDirectByteBuf.nioBuffer
  [ 7] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffer
  [ 8] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 9] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffers
  [10] io.netty.buffer.CompositeByteBuf.nioBuffers
  [11] io.netty.buffer.CompositeByteBuf.nioBuffers
  [12] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [13] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [14] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [15] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [16] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [17] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [20] io.netty.channel.AbstractChannelHandlerContext.flush
  [21] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [22] reactor.netty.channel.ChannelOperationsHandler.drain
  [23] reactor.netty.channel.ChannelOperationsHandler.flush
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [26] io.netty.channel.AbstractChannelHandlerContext.flush
  [27] io.netty.channel.DefaultChannelPipeline.flush
  [28] io.netty.channel.AbstractChannel.flush
  [29] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [30] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [31] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [32] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [33] io.netty.channel.nio.NioEventLoop.run
  [34] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet
  [ 2] reactor.core.publisher.MonoProcessor.<init>
  [ 3] reactor.core.publisher.MonoProcessor.<init>
  [ 4] reactor.core.publisher.MonoProcessor.create
  [ 5] io.rsocket.internal.UnicastMonoProcessor.<init>
  [ 6] io.rsocket.internal.UnicastMonoProcessor.create
  [ 7] io.rsocket.RSocketClient.handleRequestResponse
  [ 8] io.rsocket.RSocketClient.requestResponse
  [ 9] io.rsocket.test.PingClient.lambda$null$2
  [10] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [16] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [18] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoProcessor.onNext
  [23] io.rsocket.internal.UnicastMonoProcessor.onNext
  [24] io.rsocket.RSocketClient.handleFrame
  [25] io.rsocket.RSocketClient.handleIncomingFrames
  [26] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.netty.channel.FluxReceive.drainReceiver
  [36] reactor.netty.channel.FluxReceive.onInboundNext
  [37] reactor.netty.channel.ChannelOperations.onInboundNext
  [38] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [45] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [53] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [57] io.netty.channel.nio.NioEventLoop.run
  [58] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [59] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 1] reactor.core.publisher.MonoPeek.subscribe
  [ 2] reactor.core.publisher.MonoDoFinally.subscribe
  [ 3] reactor.core.publisher.MonoPeek.subscribe
  [ 4] reactor.core.publisher.MonoDoFinally.subscribe
  [ 5] reactor.core.publisher.Mono.subscribe
  [ 6] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 7] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 8] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [10] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [11] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [12] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [13] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [14] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [15] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoProcessor.onNext
  [18] io.rsocket.internal.UnicastMonoProcessor.onNext
  [19] io.rsocket.RSocketClient.handleFrame
  [20] io.rsocket.RSocketClient.handleIncomingFrames
  [21] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [22] reactor.core.publisher.LambdaSubscriber.onNext
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [25] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [26] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [27] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [28] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [29] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [30] reactor.netty.channel.FluxReceive.drainReceiver
  [31] reactor.netty.channel.FluxReceive.onInboundNext
  [32] reactor.netty.channel.ChannelOperations.onInboundNext
  [33] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [34] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [37] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [38] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [39] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [40] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [42] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [44] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [48] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [49] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [50] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [51] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [52] io.netty.channel.nio.NioEventLoop.run
  [53] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [54] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.nioBufferCount
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBufferCount
  [ 2] io.netty.buffer.CompositeByteBuf.nioBufferCount
  [ 3] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBufferCount
  [ 4] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 5] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 6] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 7] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 8] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 9] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [10] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [11] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [13] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [14] io.netty.channel.AbstractChannelHandlerContext.flush
  [15] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [16] reactor.netty.channel.ChannelOperationsHandler.drain
  [17] reactor.netty.channel.ChannelOperationsHandler.flush
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [20] io.netty.channel.AbstractChannelHandlerContext.flush
  [21] io.netty.channel.DefaultChannelPipeline.flush
  [22] io.netty.channel.AbstractChannel.flush
  [23] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [24] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [25] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [26] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [27] io.netty.channel.nio.NioEventLoop.run
  [28] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 1] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 2] io.netty.buffer.CompositeByteBuf.addComponents
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.handleRequestResponse
  [ 8] io.rsocket.RSocketClient.requestResponse
  [ 9] io.rsocket.test.PingClient.lambda$null$2
  [10] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [16] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [18] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoProcessor.onNext
  [23] io.rsocket.internal.UnicastMonoProcessor.onNext
  [24] io.rsocket.RSocketClient.handleFrame
  [25] io.rsocket.RSocketClient.handleIncomingFrames
  [26] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.netty.channel.FluxReceive.drainReceiver
  [36] reactor.netty.channel.FluxReceive.onInboundNext
  [37] reactor.netty.channel.ChannelOperations.onInboundNext
  [38] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [45] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [53] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [57] io.netty.channel.nio.NioEventLoop.run
  [58] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [59] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.util.AbstractReferenceCounted.release0
  [ 1] io.netty.util.AbstractReferenceCounted.release
  [ 2] io.rsocket.test.PingClient$$Lambda$83.1013876534.accept
  [ 3] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoProcessor.onNext
  [ 8] io.rsocket.internal.UnicastMonoProcessor.onNext
  [ 9] io.rsocket.RSocketClient.handleFrame
  [10] io.rsocket.RSocketClient.handleIncomingFrames
  [11] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [12] reactor.core.publisher.LambdaSubscriber.onNext
  [13] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [17] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [18] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [19] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [20] reactor.netty.channel.FluxReceive.drainReceiver
  [21] reactor.netty.channel.FluxReceive.onInboundNext
  [22] reactor.netty.channel.ChannelOperations.onInboundNext
  [23] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [27] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [28] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [30] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [34] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [37] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [38] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [39] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [40] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [42] io.netty.channel.nio.NioEventLoop.run
  [43] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [44] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.channel.AbstractChannelHandlerContext.executor
  [ 1] io.netty.channel.AbstractChannelHandlerContext.read
  [ 2] io.netty.channel.ChannelDuplexHandler.read
  [ 3] io.netty.channel.AbstractChannelHandlerContext.invokeRead
  [ 4] io.netty.channel.AbstractChannelHandlerContext.read
  [ 5] io.netty.channel.DefaultChannelPipeline.read
  [ 6] io.netty.channel.AbstractChannel.read
  [ 7] reactor.netty.channel.FluxReceive.drainReceiver
  [ 8] reactor.netty.channel.FluxReceive.onInboundNext
  [ 9] reactor.netty.channel.ChannelOperations.onInboundNext
  [10] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [13] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [14] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [15] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [16] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [17] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [21] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [22] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [23] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [24] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [25] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [27] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [28] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [29] io.netty.channel.nio.NioEventLoop.run
  [30] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet
  [ 2] reactor.core.publisher.MonoProcessor.<init>
  [ 3] reactor.core.publisher.MonoProcessor.<init>
  [ 4] reactor.core.publisher.MonoProcessor.create
  [ 5] io.rsocket.internal.UnicastMonoProcessor.<init>
  [ 6] io.rsocket.internal.UnicastMonoProcessor.create
  [ 7] io.rsocket.RSocketClient.handleRequestResponse
  [ 8] io.rsocket.RSocketClient.requestResponse
  [ 9] io.rsocket.test.PingClient.lambda$null$2
  [10] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [16] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [18] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [20] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoProcessor.onNext
  [23] io.rsocket.internal.UnicastMonoProcessor.onNext
  [24] io.rsocket.RSocketClient.handleFrame
  [25] io.rsocket.RSocketClient.handleIncomingFrames
  [26] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [34] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [35] reactor.netty.channel.FluxReceive.drainReceiver
  [36] reactor.netty.channel.FluxReceive.onInboundNext
  [37] reactor.netty.channel.ChannelOperations.onInboundNext
  [38] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [39] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [40] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [41] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [42] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [43] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [44] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [45] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [46] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [47] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [48] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [49] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [53] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [54] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [55] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [56] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [57] io.netty.channel.nio.NioEventLoop.run
  [58] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [59] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] sun.misc.Unsafe.putLongVolatile
  [ 1] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.set
  [ 2] org.HdrHistogram.AtomicHistogram.clearCounts
  [ 3] org.HdrHistogram.AbstractHistogram.reset
  [ 4] org.HdrHistogram.Recorder.performIntervalSample
  [ 5] org.HdrHistogram.Recorder.getIntervalHistogram
  [ 6] org.HdrHistogram.Recorder.getIntervalHistogram
  [ 7] io.rsocket.test.PingClient.lambda$startTracker$0
  [ 8] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [ 9] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [10] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [11] reactor.core.scheduler.PeriodicWorkerTask.call
  [12] reactor.core.scheduler.PeriodicWorkerTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.runAndReset
  [15] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 1] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 2] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 3] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 4] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 5] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [ 6] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [ 7] io.netty.channel.AbstractChannelHandlerContext.flush
  [ 8] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [ 9] reactor.netty.channel.ChannelOperationsHandler.drain
  [10] reactor.netty.channel.ChannelOperationsHandler.flush
  [11] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [12] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [13] io.netty.channel.AbstractChannelHandlerContext.flush
  [14] io.netty.channel.DefaultChannelPipeline.flush
  [15] io.netty.channel.AbstractChannel.flush
  [16] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [17] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [18] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [19] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [20] io.netty.channel.nio.NioEventLoop.run
  [21] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [22] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.AbstractList.<init>
  [ 1] java.util.ArrayList.<init>
  [ 2] io.netty.buffer.CompositeByteBuf$ComponentList.<init>
  [ 3] io.netty.buffer.CompositeByteBuf.newList
  [ 4] io.netty.buffer.CompositeByteBuf.<init>
  [ 5] io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.compositeBuffer
  [ 7] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 8] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 9] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [12] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [13] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [14] reactor.core.publisher.StrictSubscriber.onNext
  [15] io.rsocket.internal.UnboundedProcessor.drainFused
  [16] io.rsocket.internal.UnboundedProcessor.drain
  [17] io.rsocket.internal.UnboundedProcessor.onNext
  [18] io.rsocket.RSocketClient.handleRequestResponse
  [19] io.rsocket.RSocketClient.requestResponse
  [20] io.rsocket.test.PingClient.lambda$null$2
  [21] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [27] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [29] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [30] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [31] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoProcessor.onNext
  [34] io.rsocket.internal.UnicastMonoProcessor.onNext
  [35] io.rsocket.RSocketClient.handleFrame
  [36] io.rsocket.RSocketClient.handleIncomingFrames
  [37] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [38] reactor.core.publisher.LambdaSubscriber.onNext
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [43] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [44] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [45] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [46] reactor.netty.channel.FluxReceive.drainReceiver
  [47] reactor.netty.channel.FluxReceive.onInboundNext
  [48] reactor.netty.channel.ChannelOperations.onInboundNext
  [49] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [54] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [56] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [60] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [64] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [65] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [66] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [68] io.netty.channel.nio.NioEventLoop.run
  [69] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [70] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 7] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoProcessor.onNext
  [10] io.rsocket.internal.UnicastMonoProcessor.onNext
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [21] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [22] reactor.netty.channel.FluxReceive.drainReceiver
  [23] reactor.netty.channel.FluxReceive.onInboundNext
  [24] reactor.netty.channel.ChannelOperations.onInboundNext
  [25] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [30] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [33] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [34] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [35] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [36] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [37] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [38] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [39] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [40] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [41] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [42] io.netty.channel.nio.NioEventLoop.run
  [43] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [44] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.io.FileOutputStream.writeBytes
  [ 1] java.io.FileOutputStream.write
  [ 2] java.io.BufferedOutputStream.flushBuffer
  [ 3] java.io.BufferedOutputStream.flush
  [ 4] java.io.PrintStream.write
  [ 5] sun.nio.cs.StreamEncoder.writeBytes
  [ 6] sun.nio.cs.StreamEncoder.implFlushBuffer
  [ 7] sun.nio.cs.StreamEncoder.flushBuffer
  [ 8] java.io.OutputStreamWriter.flushBuffer
  [ 9] java.io.PrintStream.write
  [10] java.io.PrintStream.print
  [11] java.io.PrintStream.append
  [12] java.io.PrintStream.append
  [13] java.util.Formatter$FormatSpecifier.print
  [14] java.util.Formatter$FormatSpecifier.printInteger
  [15] java.util.Formatter$FormatSpecifier.print
  [16] java.util.Formatter.format
  [17] java.io.PrintStream.format
  [18] org.HdrHistogram.AbstractHistogram.outputPercentileDistribution
  [19] io.rsocket.test.PingClient.lambda$startTracker$0
  [20] io.rsocket.test.PingClient$$Lambda$29.1438098656.accept
  [21] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [22] reactor.core.publisher.FluxInterval$IntervalRunnable.run
  [23] reactor.core.scheduler.PeriodicWorkerTask.call
  [24] reactor.core.scheduler.PeriodicWorkerTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.runAndReset
  [27] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301
  [28] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.util.ArrayList.grow
  [ 1] java.util.ArrayList.ensureExplicitCapacity
  [ 2] java.util.ArrayList.ensureCapacityInternal
  [ 3] java.util.ArrayList.add
  [ 4] io.netty.buffer.CompositeByteBuf.addComponent0
  [ 5] io.netty.buffer.CompositeByteBuf.addComponents0
  [ 6] io.netty.buffer.CompositeByteBuf.addComponents
  [ 7] io.rsocket.frame.FrameLengthFlyweight.encode
  [ 8] io.rsocket.transport.netty.TcpDuplexConnection.lambda$null$3
  [ 9] io.rsocket.transport.netty.TcpDuplexConnection$$Lambda$60.861948825.apply
  [10] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.drain
  [11] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
  [12] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [13] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
  [14] reactor.core.publisher.StrictSubscriber.onNext
  [15] io.rsocket.internal.UnboundedProcessor.drainFused
  [16] io.rsocket.internal.UnboundedProcessor.drain
  [17] io.rsocket.internal.UnboundedProcessor.onNext
  [18] io.rsocket.RSocketClient.handleRequestResponse
  [19] io.rsocket.RSocketClient.requestResponse
  [20] io.rsocket.test.PingClient.lambda$null$2
  [21] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [27] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [29] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [30] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [31] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoProcessor.onNext
  [34] io.rsocket.internal.UnicastMonoProcessor.onNext
  [35] io.rsocket.RSocketClient.handleFrame
  [36] io.rsocket.RSocketClient.handleIncomingFrames
  [37] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [38] reactor.core.publisher.LambdaSubscriber.onNext
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [43] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [44] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [45] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [46] reactor.netty.channel.FluxReceive.drainReceiver
  [47] reactor.netty.channel.FluxReceive.onInboundNext
  [48] reactor.netty.channel.ChannelOperations.onInboundNext
  [49] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [54] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [55] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [56] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [57] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [58] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [59] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [60] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [61] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [62] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [63] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [64] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [65] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [66] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [67] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [68] io.netty.channel.nio.NioEventLoop.run
  [69] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [70] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.util.internal.PlatformDependent0.getInt
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 2] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 3] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [ 4] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [ 5] reactor.netty.channel.FluxReceive.drainReceiver
  [ 6] reactor.netty.channel.FluxReceive.onInboundNext
  [ 7] reactor.netty.channel.ChannelOperations.onInboundNext
  [ 8] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [12] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [13] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [14] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [15] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [19] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [23] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [24] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [25] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [27] io.netty.channel.nio.NioEventLoop.run
  [28] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [29] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf.toComponentIndex
  [ 1] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 2] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 3] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [ 4] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [ 5] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [ 6] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [ 7] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [ 8] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [11] io.netty.channel.AbstractChannelHandlerContext.flush
  [12] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [13] reactor.netty.channel.ChannelOperationsHandler.drain
  [14] reactor.netty.channel.ChannelOperationsHandler.flush
  [15] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [17] io.netty.channel.AbstractChannelHandlerContext.flush
  [18] io.netty.channel.DefaultChannelPipeline.flush
  [19] io.netty.channel.AbstractChannel.flush
  [20] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [21] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [22] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [23] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [24] io.netty.channel.nio.NioEventLoop.run
  [25] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [26] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.util.internal.PlatformDependent.getShort
  [ 1] io.rsocket.util.ByteBufPayload.create
  [ 2] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.RSocketClient.handleFrame
  [ 5] io.rsocket.RSocketClient.handleIncomingFrames
  [ 6] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [14] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [15] reactor.netty.channel.FluxReceive.drainReceiver
  [16] reactor.netty.channel.FluxReceive.onInboundNext
  [17] reactor.netty.channel.ChannelOperations.onInboundNext
  [18] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [22] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [23] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [24] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [25] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [26] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [27] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [28] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [29] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [30] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [31] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [32] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [33] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [34] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [35] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [36] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [37] io.netty.channel.nio.NioEventLoop.run
  [38] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [39] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.PoolThreadCache.allocateNormal
  [ 1] io.netty.buffer.PoolArena.allocate
  [ 2] io.netty.buffer.PoolArena.allocate
  [ 3] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 5] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 7] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 8] io.rsocket.frame.RequestFlyweight.encode
  [ 9] io.rsocket.frame.RequestFlyweight.encode
  [10] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [11] io.rsocket.RSocketClient.handleRequestResponse
  [12] io.rsocket.RSocketClient.requestResponse
  [13] io.rsocket.test.PingClient.lambda$null$2
  [14] io.rsocket.test.PingClient$$Lambda$79.1872215526.apply
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [20] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [22] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [24] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoProcessor.onNext
  [27] io.rsocket.internal.UnicastMonoProcessor.onNext
  [28] io.rsocket.RSocketClient.handleFrame
  [29] io.rsocket.RSocketClient.handleIncomingFrames
  [30] io.rsocket.RSocketClient$$Lambda$65.307451106.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [38] reactor.core.publisher.FluxMap$MapSubscriber.onNext
  [39] reactor.netty.channel.FluxReceive.drainReceiver
  [40] reactor.netty.channel.FluxReceive.onInboundNext
  [41] reactor.netty.channel.ChannelOperations.onInboundNext
  [42] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [43] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [44] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [45] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [46] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [47] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [48] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [49] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [50] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [51] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [52] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [53] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [54] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [55] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [56] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [57] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [58] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [59] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [60] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [61] io.netty.channel.nio.NioEventLoop.run
  [62] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [63] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] java.nio.Buffer.<init>
  [ 1] java.nio.ByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.<init>
  [ 3] java.nio.MappedByteBuffer.<init>
  [ 4] java.nio.DirectByteBuffer.<init>
  [ 5] java.nio.DirectByteBuffer.duplicate
  [ 6] io.netty.buffer.PooledUnsafeDirectByteBuf.nioBuffer
  [ 7] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffer
  [ 8] io.netty.buffer.CompositeByteBuf.nioBuffers
  [ 9] io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBuffers
  [10] io.netty.buffer.CompositeByteBuf.nioBuffers
  [11] io.netty.buffer.CompositeByteBuf.nioBuffers
  [12] io.netty.channel.ChannelOutboundBuffer.nioBuffers
  [13] io.netty.channel.socket.nio.NioSocketChannel.doWrite
  [14] io.netty.channel.AbstractChannel$AbstractUnsafe.flush0
  [15] io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0
  [16] io.netty.channel.AbstractChannel$AbstractUnsafe.flush
  [17] io.netty.channel.DefaultChannelPipeline$HeadContext.flush
  [18] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [19] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [20] io.netty.channel.AbstractChannelHandlerContext.flush
  [21] reactor.netty.channel.ChannelOperationsHandler.doWrite
  [22] reactor.netty.channel.ChannelOperationsHandler.drain
  [23] reactor.netty.channel.ChannelOperationsHandler.flush
  [24] io.netty.channel.AbstractChannelHandlerContext.invokeFlush0
  [25] io.netty.channel.AbstractChannelHandlerContext.invokeFlush
  [26] io.netty.channel.AbstractChannelHandlerContext.flush
  [27] io.netty.channel.DefaultChannelPipeline.flush
  [28] io.netty.channel.AbstractChannel.flush
  [29] io.rsocket.transport.netty.SendPublisher$InnerSubscriber.flush
  [30] io.rsocket.transport.netty.SendPublisher$InnerSubscriber$$Lambda$77.725734211.run
  [31] io.netty.util.concurrent.AbstractEventExecutor.safeExecute
  [32] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks
  [33] io.netty.channel.nio.NioEventLoop.run
  [34] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [35] java.lang.Thread.run

--- 10000000 ns (0.03%), 1 sample
  [ 0] io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
  [ 1] io.netty.buffer.CompositeByteBuf.deallocate
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 3] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 4] io.netty.util.ReferenceCountUtil.release
  [ 5] reactor.netty.channel.FluxReceive.drainReceiver
  [ 6] reactor.netty.channel.FluxReceive.onInboundNext
  [ 7] reactor.netty.channel.ChannelOperations.onInboundNext
  [ 8] reactor.netty.channel.ChannelOperationsHandler.channelRead
  [ 9] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [10] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [11] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [12] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [13] io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead
  [14] io.netty.handler.codec.ByteToMessageDecoder.callDecode
  [15] io.netty.handler.codec.ByteToMessageDecoder.channelRead
  [16] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [17] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [18] io.netty.channel.AbstractChannelHandlerContext.fireChannelRead
  [19] io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead
  [20] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [21] io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead
  [22] io.netty.channel.DefaultChannelPipeline.fireChannelRead
  [23] io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read
  [24] io.netty.channel.nio.NioEventLoop.processSelectedKey
  [25] io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized
  [26] io.netty.channel.nio.NioEventLoop.processSelectedKeys
  [27] io.netty.channel.nio.NioEventLoop.run
  [28] io.netty.util.concurrent.SingleThreadEventExecutor$5.run
  [29] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
 22770000000   76.20%     2277  sun.nio.ch.FileDispatcherImpl.writev0
  4820000000   16.13%      482  sun.nio.ch.KQueueArrayWrapper.kevent0
   570000000    1.91%       57  sun.nio.ch.FileDispatcherImpl.read0
   290000000    0.97%       29  jint_disjoint_arraycopy
    90000000    0.30%        9  java.io.FileOutputStream.writeBytes
    90000000    0.30%        9  reactor.core.publisher.FluxRange$RangeSubscription.request
    50000000    0.17%        5  java.lang.ThreadLocal.get
    50000000    0.17%        5  java.util.ArrayList.grow
    40000000    0.13%        4  reactor.core.publisher.Mono.subscribe
    30000000    0.10%        3  io.netty.buffer.CompositeByteBuf.toComponentIndex
    30000000    0.10%        3  io.netty.buffer.AbstractDerivedByteBuf.<init>
    30000000    0.10%        3  org.HdrHistogram.AbstractHistogramIterator.next
    30000000    0.10%        3  io.netty.buffer.CompositeByteBuf.nioBuffers
    30000000    0.10%        3  io.netty.buffer.AbstractByteBuf.slice
    30000000    0.10%        3  io.netty.buffer.AbstractUnpooledSlicedByteBuf.nioBufferCount
    30000000    0.10%        3  reactor.netty.channel.ChannelOperationsHandler.doWrite
    30000000    0.10%        3  reactor.core.publisher.Operators.validate
    20000000    0.07%        2  sun.nio.ch.SocketChannelImpl.write
    20000000    0.07%        2  java.nio.Buffer.<init>
    20000000    0.07%        2  org.HdrHistogram.AbstractHistogram.updateMinNonZeroValue
    20000000    0.07%        2  io.netty.util.Recycler.get
    20000000    0.07%        2  io.netty.channel.ChannelOutboundBuffer$Entry.newInstance
    20000000    0.07%        2  io.rsocket.transport.netty.SendPublisher$InnerSubscriber.onNext
    20000000    0.07%        2  io.netty.handler.codec.CodecOutputList.insert
    10000000    0.03%        1  io.netty.buffer.AbstractByteBuf.order
    10000000    0.03%        1  io.netty.channel.socket.nio.NioSocketChannel.doWrite
    10000000    0.03%        1  java.util.AbstractList.<init>
    10000000    0.03%        1  io.rsocket.transport.netty.SendPublisher$InnerSubscriber.tryDrain
    10000000    0.03%        1  io.netty.util.AbstractReferenceCounted.release0
    10000000    0.03%        1  reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
    10000000    0.03%        1  io.netty.buffer.UnsafeByteBufUtil.getInt
    10000000    0.03%        1  io.rsocket.internal.UnicastMonoProcessor.subscribe
    10000000    0.03%        1  io.netty.buffer.CompositeByteBuf.addComponent0
    10000000    0.03%        1  io.netty.buffer.AbstractByteBuf.readableBytes
    10000000    0.03%        1  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.accessCheck
    10000000    0.03%        1  io.netty.channel.DefaultChannelPipeline.write
    10000000    0.03%        1  io.netty.buffer.AbstractByteBufAllocator.directBuffer
    10000000    0.03%        1  io.rsocket.RSocketClient$ReceiverHolder.access$900
    10000000    0.03%        1  io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
    10000000    0.03%        1  io.netty.util.internal.PlatformDependent.getShort
    10000000    0.03%        1  io.netty.channel.AbstractChannelHandlerContext.executor
    10000000    0.03%        1  java.util.Arrays.fill
    10000000    0.03%        1  java.util.ArrayList.get
    10000000    0.03%        1  io.netty.channel.nio.AbstractNioChannel.doBeginRead
    10000000    0.03%        1  io.netty.util.internal.PlatformDependent0.getInt
    10000000    0.03%        1  reactor.core.publisher.FlatMapTracker.remove
    10000000    0.03%        1  reactor.core.publisher.Operators.setOnce
    10000000    0.03%        1  sun.misc.Unsafe.putLongVolatile
    10000000    0.03%        1  reactor.core.publisher.MonoProcessor.onNext
    10000000    0.03%        1  io.netty.buffer.PoolThreadCache.allocateNormal
    10000000    0.03%        1  io.netty.handler.codec.LengthFieldBasedFrameDecoder.getUnadjustedFrameLength
    10000000    0.03%        1  io.netty.buffer.PooledUnsafeDirectByteBuf._getInt
    10000000    0.03%        1  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
    10000000    0.03%        1  sun.misc.Unsafe.park
    10000000    0.03%        1  io.netty.channel.ChannelOutboundBuffer.incrementPendingOutboundBytes
    10000000    0.03%        1  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
    10000000    0.03%        1  io.netty.buffer.CompositeByteBuf$Component.freeIfNecessary
    10000000    0.03%        1  io.netty.buffer.AbstractByteBuf.ensureWritable0
    10000000    0.03%        1  sun.nio.ch.SocketDispatcher.writev
    10000000    0.03%        1  io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
    10000000    0.03%        1  io.netty.util.ResourceLeakDetector.track
    10000000    0.03%        1  reactor.netty.channel.ChannelOperations.get
    10000000    0.03%        1  io.netty.buffer.CompositeByteBuf.nioBufferCount
